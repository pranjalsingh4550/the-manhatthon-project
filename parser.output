Terminals which are not used

   "\\"


Grammar

    0 $accept: input $end

    1 input: /* empty */
    2      | stmts

    3 stmts: stmt
    4      | stmts stmt

    5 stmt: simple_stmt
    6     | compound_stmt

    7 simple_stmt: small_stmt ";" NEWLINE
    8            | small_stmt NEWLINE
    9            | small_stmt ";" simple_stmt

   10 small_stmt: expr_stmt
   11           | return_stmt
   12           | raise_stmt
   13           | "break"
   14           | "continue"
   15           | "pass"
   16           | assert_stmt

   17 expr_stmt: NAME annassign
   18          | test augassign test
   19          | test "=" test

   20 annassign: ":" test "=" test
   21          | ":" test

   22 test: or_test "if" or_test "else" test
   23     | or_test

   24 augassign: "+="
   25          | "-="
   26          | "*="
   27          | "/="
   28          | "//="
   29          | "%="
   30          | "&="
   31          | "|="
   32          | "^="
   33          | ">>="
   34          | "<<="
   35          | "**="

   36 raise_stmt: "raise"
   37           | "raise" test "from" test
   38           | "raise" test

   39 assert_stmt: "assert" test

   40 return_stmt: "return" test
   41            | "return"

   42 or_test: and_test
   43        | or_test "or" and_test

   44 and_test: not_test
   45         | and_test "and" not_test

   46 not_test: comparison
   47         | "not" not_test

   48 comparison: expr
   49           | comparison compare_op_bitwise_or_pair

   50 compare_op_bitwise_or_pair: eq_bitwise_or
   51                           | noteq_bitwise_or
   52                           | lt_bitwise_or
   53                           | lte_bitwise_or
   54                           | gt_bitwise_or
   55                           | gte_bitwise_or
   56                           | is_bitwise_or
   57                           | in_bitwise_or
   58                           | notin_bitwise_or
   59                           | isnot_bitwise_or

   60 eq_bitwise_or: "==" expr

   61 noteq_bitwise_or: "!=" expr

   62 lt_bitwise_or: "<" expr

   63 lte_bitwise_or: "<=" expr

   64 gt_bitwise_or: ">" expr

   65 gte_bitwise_or: ">=" expr

   66 is_bitwise_or: "is" expr

   67 in_bitwise_or: "in" expr

   68 notin_bitwise_or: "not" "in" expr

   69 isnot_bitwise_or: "is" "not" expr

   70 expr: xor_expr
   71     | expr "|" xor_expr

   72 xor_expr: ans_expr
   73         | xor_expr "^" ans_expr

   74 ans_expr: shift_expr
   75         | ans_expr "&" shift_expr

   76 shift_expr: sum
   77           | shift_expr "<<" sum
   78           | shift_expr ">>" sum

   79 sum: sum "+" term
   80    | sum "-" term
   81    | term

   82 term: term "*" factor
   83     | term "/" factor
   84     | term "%" factor
   85     | term "//" factor
   86     | factor

   87 factor: "+" factor
   88       | "-" factor
   89       | "~" factor
   90       | power

   91 power: primary
   92      | primary "**" factor

   93 primary: atom
   94        | primary trailer

   95 atom: NAME
   96     | NUMBER
   97     | STRING_plus
   98     | "True"
   99     | "False"
  100     | "None"

  101 STRING_plus: STRING
  102            | STRING_plus STRING

  103 trailer: "." NAME
  104        | "[" testlist "]"
  105        | "(" testlist ")"

  106 if_stmt: if_block_left_factored
  107        | if_block_left_factored "else" ":" suite
  108        | if_block_left_factored elif_block "else" ":" suite

  109 if_block_left_factored: "if" test ":" suite

  110 elif_block: "elif" test ":" suite
  111           | elif_block "elif" test ":" suite

  112 while_stmt: "while" test ":" suite

  113 arglist: test
  114        | arglist "," test

  115 suite: simple_stmt
  116      | NEWLINE INDENT stmts DEDENT

  117 funcdef: "def" NAME "(" arglist ")" "->" test ":" suite
  118        | "def" NAME "(" ")" "->" test ":" suite

  119 classdef: "class" NAME ":" suite
  120         | "class" NAME "(" arglist ")" ":" suite
  121         | "class" NAME "(" ")" ":" suite

  122 compound_stmt: if_stmt
  123              | while_stmt
  124              | for_stmt
  125              | funcdef
  126              | classdef

  127 for_stmt: "for" exprlist "in" testlist ":" suite
  128         | "for" exprlist "," "in" testlist ":" suite

  129 exprlist: xor_expr
  130         | exprlist "," xor_expr

  131 testlist: arglist
  132         | arglist ","


Terminals, with rules where they appear

$end (0) 0
error (256)
NEWLINE (258) 7 8 116
NAME (259) 17 95 103 117 118 119 120 121
INDENT (260) 116
DEDENT (261) 116
";" (262) 7 9
"=" (263) 19 20
":" (264) 20 21 107 108 109 110 111 112 117 118 119 120 121 127 128
"," (265) 114 128 130 132
"[" (266) 104
"]" (267) 104
"." (268) 103
"class" (269) 119 120 121
"->" (270) 117 118
"def" (271) 117 118
"while" (272) 112
"for" (273) 127 128
"break" (274) 13
"continue" (275) 14
"return" (276) 40 41
"pass" (277) 15
"assert" (278) 39
"raise" (279) 36 37 38
"from" (280) 37
"if" (281) 22 109
"else" (282) 22 107 108
"elif" (283) 110 111
"and" (284) 45
"or" (285) 43
"not" (286) 47 68 69
"==" (287) 60
"!=" (288) 61
"<" (289) 62
"<=" (290) 63
">" (291) 64
">=" (292) 65
"is" (293) 66 69
"in" (294) 67 68 127 128
"|" (295) 71
"^" (296) 73
"&" (297) 75
"<<" (298) 77
">>" (299) 78
"+" (300) 79 87
"-" (301) 80 88
"*" (302) 82
"/" (303) 83
"%" (304) 84
"//" (305) 85
"~" (306) 89
"**" (307) 92
"+=" (308) 24
"-=" (309) 25
"*=" (310) 26
"/=" (311) 27
"%=" (312) 29
"//=" (313) 28
"&=" (314) 30
"|=" (315) 31
"^=" (316) 32
"<<=" (317) 34
">>=" (318) 33
"**=" (319) 35
"(" (320) 105 117 118 120 121
")" (321) 105 117 118 120 121
"\\" (322)
NUMBER (323) 96
STRING (324) 101 102
"True" (325) 98
"False" (326) 99
"None" (327) 100


Nonterminals, with rules where they appear

$accept (73)
    on left: 0
input (74)
    on left: 1 2, on right: 0
stmts (75)
    on left: 3 4, on right: 2 4 116
stmt (76)
    on left: 5 6, on right: 3 4
simple_stmt (77)
    on left: 7 8 9, on right: 5 9 115
small_stmt (78)
    on left: 10 11 12 13 14 15 16, on right: 7 8 9
expr_stmt (79)
    on left: 17 18 19, on right: 10
annassign (80)
    on left: 20 21, on right: 17
test (81)
    on left: 22 23, on right: 18 19 20 21 22 37 38 39 40 109 110 111
    112 113 114 117 118
augassign (82)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35, on right: 18
raise_stmt (83)
    on left: 36 37 38, on right: 12
assert_stmt (84)
    on left: 39, on right: 16
return_stmt (85)
    on left: 40 41, on right: 11
or_test (86)
    on left: 42 43, on right: 22 23 43
and_test (87)
    on left: 44 45, on right: 42 43 45
not_test (88)
    on left: 46 47, on right: 44 45 47
comparison (89)
    on left: 48 49, on right: 46 49
compare_op_bitwise_or_pair (90)
    on left: 50 51 52 53 54 55 56 57 58 59, on right: 49
eq_bitwise_or (91)
    on left: 60, on right: 50
noteq_bitwise_or (92)
    on left: 61, on right: 51
lt_bitwise_or (93)
    on left: 62, on right: 52
lte_bitwise_or (94)
    on left: 63, on right: 53
gt_bitwise_or (95)
    on left: 64, on right: 54
gte_bitwise_or (96)
    on left: 65, on right: 55
is_bitwise_or (97)
    on left: 66, on right: 56
in_bitwise_or (98)
    on left: 67, on right: 57
notin_bitwise_or (99)
    on left: 68, on right: 58
isnot_bitwise_or (100)
    on left: 69, on right: 59
expr (101)
    on left: 70 71, on right: 48 60 61 62 63 64 65 66 67 68 69 71
xor_expr (102)
    on left: 72 73, on right: 70 71 73 129 130
ans_expr (103)
    on left: 74 75, on right: 72 73 75
shift_expr (104)
    on left: 76 77 78, on right: 74 75 77 78
sum (105)
    on left: 79 80 81, on right: 76 77 78 79 80
term (106)
    on left: 82 83 84 85 86, on right: 79 80 81 82 83 84 85
factor (107)
    on left: 87 88 89 90, on right: 82 83 84 85 86 87 88 89 92
power (108)
    on left: 91 92, on right: 90
primary (109)
    on left: 93 94, on right: 91 92 94
atom (110)
    on left: 95 96 97 98 99 100, on right: 93
STRING_plus (111)
    on left: 101 102, on right: 97 102
trailer (112)
    on left: 103 104 105, on right: 94
if_stmt (113)
    on left: 106 107 108, on right: 122
if_block_left_factored (114)
    on left: 109, on right: 106 107 108
elif_block (115)
    on left: 110 111, on right: 108 111
while_stmt (116)
    on left: 112, on right: 123
arglist (117)
    on left: 113 114, on right: 114 117 120 131 132
suite (118)
    on left: 115 116, on right: 107 108 109 110 111 112 117 118 119
    120 121 127 128
funcdef (119)
    on left: 117 118, on right: 125
classdef (120)
    on left: 119 120 121, on right: 126
compound_stmt (121)
    on left: 122 123 124 125 126, on right: 6
for_stmt (122)
    on left: 127 128, on right: 124
exprlist (123)
    on left: 129 130, on right: 127 128 130
testlist (124)
    on left: 131 132, on right: 104 105 127 128


state 0

    0 $accept: . input $end

    NAME        shift, and go to state 1
    "class"     shift, and go to state 2
    "def"       shift, and go to state 3
    "while"     shift, and go to state 4
    "for"       shift, and go to state 5
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "if"        shift, and go to state 12
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    $default  reduce using rule 1 (input)

    input                   go to state 22
    stmts                   go to state 23
    stmt                    go to state 24
    simple_stmt             go to state 25
    small_stmt              go to state 26
    expr_stmt               go to state 27
    test                    go to state 28
    raise_stmt              go to state 29
    assert_stmt             go to state 30
    return_stmt             go to state 31
    or_test                 go to state 32
    and_test                go to state 33
    not_test                go to state 34
    comparison              go to state 35
    expr                    go to state 36
    xor_expr                go to state 37
    ans_expr                go to state 38
    shift_expr              go to state 39
    sum                     go to state 40
    term                    go to state 41
    factor                  go to state 42
    power                   go to state 43
    primary                 go to state 44
    atom                    go to state 45
    STRING_plus             go to state 46
    if_stmt                 go to state 47
    if_block_left_factored  go to state 48
    while_stmt              go to state 49
    funcdef                 go to state 50
    classdef                go to state 51
    compound_stmt           go to state 52
    for_stmt                go to state 53


state 1

   17 expr_stmt: NAME . annassign
   95 atom: NAME .

    ":"  shift, and go to state 54

    $default  reduce using rule 95 (atom)

    annassign  go to state 55


state 2

  119 classdef: "class" . NAME ":" suite
  120         | "class" . NAME "(" arglist ")" ":" suite
  121         | "class" . NAME "(" ")" ":" suite

    NAME  shift, and go to state 56


state 3

  117 funcdef: "def" . NAME "(" arglist ")" "->" test ":" suite
  118        | "def" . NAME "(" ")" "->" test ":" suite

    NAME  shift, and go to state 57


state 4

  112 while_stmt: "while" . test ":" suite

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 59
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 5

  127 for_stmt: "for" . exprlist "in" testlist ":" suite
  128         | "for" . exprlist "," "in" testlist ":" suite

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    xor_expr     go to state 60
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    exprlist     go to state 61


state 6

   13 small_stmt: "break" .

    $default  reduce using rule 13 (small_stmt)


state 7

   14 small_stmt: "continue" .

    $default  reduce using rule 14 (small_stmt)


state 8

   40 return_stmt: "return" . test
   41            | "return" .

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    $default  reduce using rule 41 (return_stmt)

    test         go to state 62
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 9

   15 small_stmt: "pass" .

    $default  reduce using rule 15 (small_stmt)


state 10

   39 assert_stmt: "assert" . test

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 63
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 11

   36 raise_stmt: "raise" .
   37           | "raise" . test "from" test
   38           | "raise" . test

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    $default  reduce using rule 36 (raise_stmt)

    test         go to state 64
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 12

  109 if_block_left_factored: "if" . test ":" suite

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 65
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 13

   47 not_test: "not" . not_test

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    not_test     go to state 66
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 14

   87 factor: "+" . factor

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    factor       go to state 67
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 15

   88 factor: "-" . factor

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    factor       go to state 68
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 16

   89 factor: "~" . factor

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    factor       go to state 69
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 17

   96 atom: NUMBER .

    $default  reduce using rule 96 (atom)


state 18

  101 STRING_plus: STRING .

    $default  reduce using rule 101 (STRING_plus)


state 19

   98 atom: "True" .

    $default  reduce using rule 98 (atom)


state 20

   99 atom: "False" .

    $default  reduce using rule 99 (atom)


state 21

  100 atom: "None" .

    $default  reduce using rule 100 (atom)


state 22

    0 $accept: input . $end

    $end  shift, and go to state 70


state 23

    2 input: stmts .
    4 stmts: stmts . stmt

    NAME        shift, and go to state 1
    "class"     shift, and go to state 2
    "def"       shift, and go to state 3
    "while"     shift, and go to state 4
    "for"       shift, and go to state 5
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "if"        shift, and go to state 12
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    $default  reduce using rule 2 (input)

    stmt                    go to state 71
    simple_stmt             go to state 25
    small_stmt              go to state 26
    expr_stmt               go to state 27
    test                    go to state 28
    raise_stmt              go to state 29
    assert_stmt             go to state 30
    return_stmt             go to state 31
    or_test                 go to state 32
    and_test                go to state 33
    not_test                go to state 34
    comparison              go to state 35
    expr                    go to state 36
    xor_expr                go to state 37
    ans_expr                go to state 38
    shift_expr              go to state 39
    sum                     go to state 40
    term                    go to state 41
    factor                  go to state 42
    power                   go to state 43
    primary                 go to state 44
    atom                    go to state 45
    STRING_plus             go to state 46
    if_stmt                 go to state 47
    if_block_left_factored  go to state 48
    while_stmt              go to state 49
    funcdef                 go to state 50
    classdef                go to state 51
    compound_stmt           go to state 52
    for_stmt                go to state 53


state 24

    3 stmts: stmt .

    $default  reduce using rule 3 (stmts)


state 25

    5 stmt: simple_stmt .

    $default  reduce using rule 5 (stmt)


state 26

    7 simple_stmt: small_stmt . ";" NEWLINE
    8            | small_stmt . NEWLINE
    9            | small_stmt . ";" simple_stmt

    NEWLINE  shift, and go to state 72
    ";"      shift, and go to state 73


state 27

   10 small_stmt: expr_stmt .

    $default  reduce using rule 10 (small_stmt)


state 28

   18 expr_stmt: test . augassign test
   19          | test . "=" test

    "="    shift, and go to state 74
    "+="   shift, and go to state 75
    "-="   shift, and go to state 76
    "*="   shift, and go to state 77
    "/="   shift, and go to state 78
    "%="   shift, and go to state 79
    "//="  shift, and go to state 80
    "&="   shift, and go to state 81
    "|="   shift, and go to state 82
    "^="   shift, and go to state 83
    "<<="  shift, and go to state 84
    ">>="  shift, and go to state 85
    "**="  shift, and go to state 86

    augassign  go to state 87


state 29

   12 small_stmt: raise_stmt .

    $default  reduce using rule 12 (small_stmt)


state 30

   16 small_stmt: assert_stmt .

    $default  reduce using rule 16 (small_stmt)


state 31

   11 small_stmt: return_stmt .

    $default  reduce using rule 11 (small_stmt)


state 32

   22 test: or_test . "if" or_test "else" test
   23     | or_test .
   43 or_test: or_test . "or" and_test

    "if"  shift, and go to state 88
    "or"  shift, and go to state 89

    $default  reduce using rule 23 (test)


state 33

   42 or_test: and_test .
   45 and_test: and_test . "and" not_test

    "and"  shift, and go to state 90

    $default  reduce using rule 42 (or_test)


state 34

   44 and_test: not_test .

    $default  reduce using rule 44 (and_test)


state 35

   46 not_test: comparison .
   49 comparison: comparison . compare_op_bitwise_or_pair

    "not"  shift, and go to state 91
    "=="   shift, and go to state 92
    "!="   shift, and go to state 93
    "<"    shift, and go to state 94
    "<="   shift, and go to state 95
    ">"    shift, and go to state 96
    ">="   shift, and go to state 97
    "is"   shift, and go to state 98
    "in"   shift, and go to state 99

    $default  reduce using rule 46 (not_test)

    compare_op_bitwise_or_pair  go to state 100
    eq_bitwise_or               go to state 101
    noteq_bitwise_or            go to state 102
    lt_bitwise_or               go to state 103
    lte_bitwise_or              go to state 104
    gt_bitwise_or               go to state 105
    gte_bitwise_or              go to state 106
    is_bitwise_or               go to state 107
    in_bitwise_or               go to state 108
    notin_bitwise_or            go to state 109
    isnot_bitwise_or            go to state 110


state 36

   48 comparison: expr .
   71 expr: expr . "|" xor_expr

    "|"  shift, and go to state 111

    $default  reduce using rule 48 (comparison)


state 37

   70 expr: xor_expr .
   73 xor_expr: xor_expr . "^" ans_expr

    "^"  shift, and go to state 112

    $default  reduce using rule 70 (expr)


state 38

   72 xor_expr: ans_expr .
   75 ans_expr: ans_expr . "&" shift_expr

    "&"  shift, and go to state 113

    $default  reduce using rule 72 (xor_expr)


state 39

   74 ans_expr: shift_expr .
   77 shift_expr: shift_expr . "<<" sum
   78           | shift_expr . ">>" sum

    "<<"  shift, and go to state 114
    ">>"  shift, and go to state 115

    $default  reduce using rule 74 (ans_expr)


state 40

   76 shift_expr: sum .
   79 sum: sum . "+" term
   80    | sum . "-" term

    "+"  shift, and go to state 116
    "-"  shift, and go to state 117

    $default  reduce using rule 76 (shift_expr)


state 41

   81 sum: term .
   82 term: term . "*" factor
   83     | term . "/" factor
   84     | term . "%" factor
   85     | term . "//" factor

    "*"   shift, and go to state 118
    "/"   shift, and go to state 119
    "%"   shift, and go to state 120
    "//"  shift, and go to state 121

    $default  reduce using rule 81 (sum)


state 42

   86 term: factor .

    $default  reduce using rule 86 (term)


state 43

   90 factor: power .

    $default  reduce using rule 90 (factor)


state 44

   91 power: primary .
   92      | primary . "**" factor
   94 primary: primary . trailer

    "["   shift, and go to state 122
    "."   shift, and go to state 123
    "**"  shift, and go to state 124
    "("   shift, and go to state 125

    $default  reduce using rule 91 (power)

    trailer  go to state 126


state 45

   93 primary: atom .

    $default  reduce using rule 93 (primary)


state 46

   97 atom: STRING_plus .
  102 STRING_plus: STRING_plus . STRING

    STRING  shift, and go to state 127

    $default  reduce using rule 97 (atom)


state 47

  122 compound_stmt: if_stmt .

    $default  reduce using rule 122 (compound_stmt)


state 48

  106 if_stmt: if_block_left_factored .
  107        | if_block_left_factored . "else" ":" suite
  108        | if_block_left_factored . elif_block "else" ":" suite

    "else"  shift, and go to state 128
    "elif"  shift, and go to state 129

    $default  reduce using rule 106 (if_stmt)

    elif_block  go to state 130


state 49

  123 compound_stmt: while_stmt .

    $default  reduce using rule 123 (compound_stmt)


state 50

  125 compound_stmt: funcdef .

    $default  reduce using rule 125 (compound_stmt)


state 51

  126 compound_stmt: classdef .

    $default  reduce using rule 126 (compound_stmt)


state 52

    6 stmt: compound_stmt .

    $default  reduce using rule 6 (stmt)


state 53

  124 compound_stmt: for_stmt .

    $default  reduce using rule 124 (compound_stmt)


state 54

   20 annassign: ":" . test "=" test
   21          | ":" . test

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 131
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 55

   17 expr_stmt: NAME annassign .

    $default  reduce using rule 17 (expr_stmt)


state 56

  119 classdef: "class" NAME . ":" suite
  120         | "class" NAME . "(" arglist ")" ":" suite
  121         | "class" NAME . "(" ")" ":" suite

    ":"  shift, and go to state 132
    "("  shift, and go to state 133


state 57

  117 funcdef: "def" NAME . "(" arglist ")" "->" test ":" suite
  118        | "def" NAME . "(" ")" "->" test ":" suite

    "("  shift, and go to state 134


state 58

   95 atom: NAME .

    $default  reduce using rule 95 (atom)


state 59

  112 while_stmt: "while" test . ":" suite

    ":"  shift, and go to state 135


state 60

   73 xor_expr: xor_expr . "^" ans_expr
  129 exprlist: xor_expr .

    "^"  shift, and go to state 112

    $default  reduce using rule 129 (exprlist)


state 61

  127 for_stmt: "for" exprlist . "in" testlist ":" suite
  128         | "for" exprlist . "," "in" testlist ":" suite
  130 exprlist: exprlist . "," xor_expr

    ","   shift, and go to state 136
    "in"  shift, and go to state 137


state 62

   40 return_stmt: "return" test .

    $default  reduce using rule 40 (return_stmt)


state 63

   39 assert_stmt: "assert" test .

    $default  reduce using rule 39 (assert_stmt)


state 64

   37 raise_stmt: "raise" test . "from" test
   38           | "raise" test .

    "from"  shift, and go to state 138

    $default  reduce using rule 38 (raise_stmt)


state 65

  109 if_block_left_factored: "if" test . ":" suite

    ":"  shift, and go to state 139


state 66

   47 not_test: "not" not_test .

    $default  reduce using rule 47 (not_test)


state 67

   87 factor: "+" factor .

    $default  reduce using rule 87 (factor)


state 68

   88 factor: "-" factor .

    $default  reduce using rule 88 (factor)


state 69

   89 factor: "~" factor .

    $default  reduce using rule 89 (factor)


state 70

    0 $accept: input $end .

    $default  accept


state 71

    4 stmts: stmts stmt .

    $default  reduce using rule 4 (stmts)


state 72

    8 simple_stmt: small_stmt NEWLINE .

    $default  reduce using rule 8 (simple_stmt)


state 73

    7 simple_stmt: small_stmt ";" . NEWLINE
    9            | small_stmt ";" . simple_stmt

    NEWLINE     shift, and go to state 140
    NAME        shift, and go to state 1
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    simple_stmt  go to state 141
    small_stmt   go to state 26
    expr_stmt    go to state 27
    test         go to state 28
    raise_stmt   go to state 29
    assert_stmt  go to state 30
    return_stmt  go to state 31
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 74

   19 expr_stmt: test "=" . test

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 142
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 75

   24 augassign: "+=" .

    $default  reduce using rule 24 (augassign)


state 76

   25 augassign: "-=" .

    $default  reduce using rule 25 (augassign)


state 77

   26 augassign: "*=" .

    $default  reduce using rule 26 (augassign)


state 78

   27 augassign: "/=" .

    $default  reduce using rule 27 (augassign)


state 79

   29 augassign: "%=" .

    $default  reduce using rule 29 (augassign)


state 80

   28 augassign: "//=" .

    $default  reduce using rule 28 (augassign)


state 81

   30 augassign: "&=" .

    $default  reduce using rule 30 (augassign)


state 82

   31 augassign: "|=" .

    $default  reduce using rule 31 (augassign)


state 83

   32 augassign: "^=" .

    $default  reduce using rule 32 (augassign)


state 84

   34 augassign: "<<=" .

    $default  reduce using rule 34 (augassign)


state 85

   33 augassign: ">>=" .

    $default  reduce using rule 33 (augassign)


state 86

   35 augassign: "**=" .

    $default  reduce using rule 35 (augassign)


state 87

   18 expr_stmt: test augassign . test

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 143
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 88

   22 test: or_test "if" . or_test "else" test

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    or_test      go to state 144
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 89

   43 or_test: or_test "or" . and_test

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    and_test     go to state 145
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 90

   45 and_test: and_test "and" . not_test

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    not_test     go to state 146
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 91

   68 notin_bitwise_or: "not" . "in" expr

    "in"  shift, and go to state 147


state 92

   60 eq_bitwise_or: "==" . expr

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    expr         go to state 148
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 93

   61 noteq_bitwise_or: "!=" . expr

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    expr         go to state 149
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 94

   62 lt_bitwise_or: "<" . expr

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    expr         go to state 150
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 95

   63 lte_bitwise_or: "<=" . expr

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    expr         go to state 151
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 96

   64 gt_bitwise_or: ">" . expr

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    expr         go to state 152
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 97

   65 gte_bitwise_or: ">=" . expr

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    expr         go to state 153
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 98

   66 is_bitwise_or: "is" . expr
   69 isnot_bitwise_or: "is" . "not" expr

    NAME     shift, and go to state 58
    "not"    shift, and go to state 154
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    expr         go to state 155
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 99

   67 in_bitwise_or: "in" . expr

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    expr         go to state 156
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 100

   49 comparison: comparison compare_op_bitwise_or_pair .

    $default  reduce using rule 49 (comparison)


state 101

   50 compare_op_bitwise_or_pair: eq_bitwise_or .

    $default  reduce using rule 50 (compare_op_bitwise_or_pair)


state 102

   51 compare_op_bitwise_or_pair: noteq_bitwise_or .

    $default  reduce using rule 51 (compare_op_bitwise_or_pair)


state 103

   52 compare_op_bitwise_or_pair: lt_bitwise_or .

    $default  reduce using rule 52 (compare_op_bitwise_or_pair)


state 104

   53 compare_op_bitwise_or_pair: lte_bitwise_or .

    $default  reduce using rule 53 (compare_op_bitwise_or_pair)


state 105

   54 compare_op_bitwise_or_pair: gt_bitwise_or .

    $default  reduce using rule 54 (compare_op_bitwise_or_pair)


state 106

   55 compare_op_bitwise_or_pair: gte_bitwise_or .

    $default  reduce using rule 55 (compare_op_bitwise_or_pair)


state 107

   56 compare_op_bitwise_or_pair: is_bitwise_or .

    $default  reduce using rule 56 (compare_op_bitwise_or_pair)


state 108

   57 compare_op_bitwise_or_pair: in_bitwise_or .

    $default  reduce using rule 57 (compare_op_bitwise_or_pair)


state 109

   58 compare_op_bitwise_or_pair: notin_bitwise_or .

    $default  reduce using rule 58 (compare_op_bitwise_or_pair)


state 110

   59 compare_op_bitwise_or_pair: isnot_bitwise_or .

    $default  reduce using rule 59 (compare_op_bitwise_or_pair)


state 111

   71 expr: expr "|" . xor_expr

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    xor_expr     go to state 157
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 112

   73 xor_expr: xor_expr "^" . ans_expr

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    ans_expr     go to state 158
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 113

   75 ans_expr: ans_expr "&" . shift_expr

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    shift_expr   go to state 159
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 114

   77 shift_expr: shift_expr "<<" . sum

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    sum          go to state 160
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 115

   78 shift_expr: shift_expr ">>" . sum

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    sum          go to state 161
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 116

   79 sum: sum "+" . term

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    term         go to state 162
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 117

   80 sum: sum "-" . term

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    term         go to state 163
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 118

   82 term: term "*" . factor

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    factor       go to state 164
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 119

   83 term: term "/" . factor

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    factor       go to state 165
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 120

   84 term: term "%" . factor

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    factor       go to state 166
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 121

   85 term: term "//" . factor

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    factor       go to state 167
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 122

  104 trailer: "[" . testlist "]"

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 168
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    arglist      go to state 169
    testlist     go to state 170


state 123

  103 trailer: "." . NAME

    NAME  shift, and go to state 171


state 124

   92 power: primary "**" . factor

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    factor       go to state 172
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 125

  105 trailer: "(" . testlist ")"

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 168
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    arglist      go to state 169
    testlist     go to state 173


state 126

   94 primary: primary trailer .

    $default  reduce using rule 94 (primary)


state 127

  102 STRING_plus: STRING_plus STRING .

    $default  reduce using rule 102 (STRING_plus)


state 128

  107 if_stmt: if_block_left_factored "else" . ":" suite

    ":"  shift, and go to state 174


state 129

  110 elif_block: "elif" . test ":" suite

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 175
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 130

  108 if_stmt: if_block_left_factored elif_block . "else" ":" suite
  111 elif_block: elif_block . "elif" test ":" suite

    "else"  shift, and go to state 176
    "elif"  shift, and go to state 177


state 131

   20 annassign: ":" test . "=" test
   21          | ":" test .

    "="  shift, and go to state 178

    $default  reduce using rule 21 (annassign)


state 132

  119 classdef: "class" NAME ":" . suite

    NEWLINE     shift, and go to state 179
    NAME        shift, and go to state 1
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    simple_stmt  go to state 180
    small_stmt   go to state 26
    expr_stmt    go to state 27
    test         go to state 28
    raise_stmt   go to state 29
    assert_stmt  go to state 30
    return_stmt  go to state 31
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    suite        go to state 181


state 133

  120 classdef: "class" NAME "(" . arglist ")" ":" suite
  121         | "class" NAME "(" . ")" ":" suite

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    ")"      shift, and go to state 182
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 168
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    arglist      go to state 183


state 134

  117 funcdef: "def" NAME "(" . arglist ")" "->" test ":" suite
  118        | "def" NAME "(" . ")" "->" test ":" suite

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    ")"      shift, and go to state 184
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 168
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    arglist      go to state 185


state 135

  112 while_stmt: "while" test ":" . suite

    NEWLINE     shift, and go to state 179
    NAME        shift, and go to state 1
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    simple_stmt  go to state 180
    small_stmt   go to state 26
    expr_stmt    go to state 27
    test         go to state 28
    raise_stmt   go to state 29
    assert_stmt  go to state 30
    return_stmt  go to state 31
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    suite        go to state 186


state 136

  128 for_stmt: "for" exprlist "," . "in" testlist ":" suite
  130 exprlist: exprlist "," . xor_expr

    NAME     shift, and go to state 58
    "in"     shift, and go to state 187
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    xor_expr     go to state 188
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 137

  127 for_stmt: "for" exprlist "in" . testlist ":" suite

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 168
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    arglist      go to state 169
    testlist     go to state 189


state 138

   37 raise_stmt: "raise" test "from" . test

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 190
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 139

  109 if_block_left_factored: "if" test ":" . suite

    NEWLINE     shift, and go to state 179
    NAME        shift, and go to state 1
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    simple_stmt  go to state 180
    small_stmt   go to state 26
    expr_stmt    go to state 27
    test         go to state 28
    raise_stmt   go to state 29
    assert_stmt  go to state 30
    return_stmt  go to state 31
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    suite        go to state 191


state 140

    7 simple_stmt: small_stmt ";" NEWLINE .

    $default  reduce using rule 7 (simple_stmt)


state 141

    9 simple_stmt: small_stmt ";" simple_stmt .

    $default  reduce using rule 9 (simple_stmt)


state 142

   19 expr_stmt: test "=" test .

    $default  reduce using rule 19 (expr_stmt)


state 143

   18 expr_stmt: test augassign test .

    $default  reduce using rule 18 (expr_stmt)


state 144

   22 test: or_test "if" or_test . "else" test
   43 or_test: or_test . "or" and_test

    "else"  shift, and go to state 192
    "or"    shift, and go to state 89


state 145

   43 or_test: or_test "or" and_test .
   45 and_test: and_test . "and" not_test

    "and"  shift, and go to state 90

    $default  reduce using rule 43 (or_test)


state 146

   45 and_test: and_test "and" not_test .

    $default  reduce using rule 45 (and_test)


state 147

   68 notin_bitwise_or: "not" "in" . expr

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    expr         go to state 193
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 148

   60 eq_bitwise_or: "==" expr .
   71 expr: expr . "|" xor_expr

    "|"  shift, and go to state 111

    $default  reduce using rule 60 (eq_bitwise_or)


state 149

   61 noteq_bitwise_or: "!=" expr .
   71 expr: expr . "|" xor_expr

    "|"  shift, and go to state 111

    $default  reduce using rule 61 (noteq_bitwise_or)


state 150

   62 lt_bitwise_or: "<" expr .
   71 expr: expr . "|" xor_expr

    "|"  shift, and go to state 111

    $default  reduce using rule 62 (lt_bitwise_or)


state 151

   63 lte_bitwise_or: "<=" expr .
   71 expr: expr . "|" xor_expr

    "|"  shift, and go to state 111

    $default  reduce using rule 63 (lte_bitwise_or)


state 152

   64 gt_bitwise_or: ">" expr .
   71 expr: expr . "|" xor_expr

    "|"  shift, and go to state 111

    $default  reduce using rule 64 (gt_bitwise_or)


state 153

   65 gte_bitwise_or: ">=" expr .
   71 expr: expr . "|" xor_expr

    "|"  shift, and go to state 111

    $default  reduce using rule 65 (gte_bitwise_or)


state 154

   69 isnot_bitwise_or: "is" "not" . expr

    NAME     shift, and go to state 58
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    expr         go to state 194
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 155

   66 is_bitwise_or: "is" expr .
   71 expr: expr . "|" xor_expr

    "|"  shift, and go to state 111

    $default  reduce using rule 66 (is_bitwise_or)


state 156

   67 in_bitwise_or: "in" expr .
   71 expr: expr . "|" xor_expr

    "|"  shift, and go to state 111

    $default  reduce using rule 67 (in_bitwise_or)


state 157

   71 expr: expr "|" xor_expr .
   73 xor_expr: xor_expr . "^" ans_expr

    "^"  shift, and go to state 112

    $default  reduce using rule 71 (expr)


state 158

   73 xor_expr: xor_expr "^" ans_expr .
   75 ans_expr: ans_expr . "&" shift_expr

    "&"  shift, and go to state 113

    $default  reduce using rule 73 (xor_expr)


state 159

   75 ans_expr: ans_expr "&" shift_expr .
   77 shift_expr: shift_expr . "<<" sum
   78           | shift_expr . ">>" sum

    "<<"  shift, and go to state 114
    ">>"  shift, and go to state 115

    $default  reduce using rule 75 (ans_expr)


state 160

   77 shift_expr: shift_expr "<<" sum .
   79 sum: sum . "+" term
   80    | sum . "-" term

    "+"  shift, and go to state 116
    "-"  shift, and go to state 117

    $default  reduce using rule 77 (shift_expr)


state 161

   78 shift_expr: shift_expr ">>" sum .
   79 sum: sum . "+" term
   80    | sum . "-" term

    "+"  shift, and go to state 116
    "-"  shift, and go to state 117

    $default  reduce using rule 78 (shift_expr)


state 162

   79 sum: sum "+" term .
   82 term: term . "*" factor
   83     | term . "/" factor
   84     | term . "%" factor
   85     | term . "//" factor

    "*"   shift, and go to state 118
    "/"   shift, and go to state 119
    "%"   shift, and go to state 120
    "//"  shift, and go to state 121

    $default  reduce using rule 79 (sum)


state 163

   80 sum: sum "-" term .
   82 term: term . "*" factor
   83     | term . "/" factor
   84     | term . "%" factor
   85     | term . "//" factor

    "*"   shift, and go to state 118
    "/"   shift, and go to state 119
    "%"   shift, and go to state 120
    "//"  shift, and go to state 121

    $default  reduce using rule 80 (sum)


state 164

   82 term: term "*" factor .

    $default  reduce using rule 82 (term)


state 165

   83 term: term "/" factor .

    $default  reduce using rule 83 (term)


state 166

   84 term: term "%" factor .

    $default  reduce using rule 84 (term)


state 167

   85 term: term "//" factor .

    $default  reduce using rule 85 (term)


state 168

  113 arglist: test .

    $default  reduce using rule 113 (arglist)


state 169

  114 arglist: arglist . "," test
  131 testlist: arglist .
  132         | arglist . ","

    ","  shift, and go to state 195

    $default  reduce using rule 131 (testlist)


state 170

  104 trailer: "[" testlist . "]"

    "]"  shift, and go to state 196


state 171

  103 trailer: "." NAME .

    $default  reduce using rule 103 (trailer)


state 172

   92 power: primary "**" factor .

    $default  reduce using rule 92 (power)


state 173

  105 trailer: "(" testlist . ")"

    ")"  shift, and go to state 197


state 174

  107 if_stmt: if_block_left_factored "else" ":" . suite

    NEWLINE     shift, and go to state 179
    NAME        shift, and go to state 1
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    simple_stmt  go to state 180
    small_stmt   go to state 26
    expr_stmt    go to state 27
    test         go to state 28
    raise_stmt   go to state 29
    assert_stmt  go to state 30
    return_stmt  go to state 31
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    suite        go to state 198


state 175

  110 elif_block: "elif" test . ":" suite

    ":"  shift, and go to state 199


state 176

  108 if_stmt: if_block_left_factored elif_block "else" . ":" suite

    ":"  shift, and go to state 200


state 177

  111 elif_block: elif_block "elif" . test ":" suite

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 201
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 178

   20 annassign: ":" test "=" . test

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 202
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 179

  116 suite: NEWLINE . INDENT stmts DEDENT

    INDENT  shift, and go to state 203


state 180

  115 suite: simple_stmt .

    $default  reduce using rule 115 (suite)


state 181

  119 classdef: "class" NAME ":" suite .

    $default  reduce using rule 119 (classdef)


state 182

  121 classdef: "class" NAME "(" ")" . ":" suite

    ":"  shift, and go to state 204


state 183

  114 arglist: arglist . "," test
  120 classdef: "class" NAME "(" arglist . ")" ":" suite

    ","  shift, and go to state 205
    ")"  shift, and go to state 206


state 184

  118 funcdef: "def" NAME "(" ")" . "->" test ":" suite

    "->"  shift, and go to state 207


state 185

  114 arglist: arglist . "," test
  117 funcdef: "def" NAME "(" arglist . ")" "->" test ":" suite

    ","  shift, and go to state 205
    ")"  shift, and go to state 208


state 186

  112 while_stmt: "while" test ":" suite .

    $default  reduce using rule 112 (while_stmt)


state 187

  128 for_stmt: "for" exprlist "," "in" . testlist ":" suite

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 168
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    arglist      go to state 169
    testlist     go to state 209


state 188

   73 xor_expr: xor_expr . "^" ans_expr
  130 exprlist: exprlist "," xor_expr .

    "^"  shift, and go to state 112

    $default  reduce using rule 130 (exprlist)


state 189

  127 for_stmt: "for" exprlist "in" testlist . ":" suite

    ":"  shift, and go to state 210


state 190

   37 raise_stmt: "raise" test "from" test .

    $default  reduce using rule 37 (raise_stmt)


state 191

  109 if_block_left_factored: "if" test ":" suite .

    $default  reduce using rule 109 (if_block_left_factored)


state 192

   22 test: or_test "if" or_test "else" . test

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 211
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 193

   68 notin_bitwise_or: "not" "in" expr .
   71 expr: expr . "|" xor_expr

    "|"  shift, and go to state 111

    $default  reduce using rule 68 (notin_bitwise_or)


state 194

   69 isnot_bitwise_or: "is" "not" expr .
   71 expr: expr . "|" xor_expr

    "|"  shift, and go to state 111

    $default  reduce using rule 69 (isnot_bitwise_or)


state 195

  114 arglist: arglist "," . test
  132 testlist: arglist "," .

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    $default  reduce using rule 132 (testlist)

    test         go to state 212
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 196

  104 trailer: "[" testlist "]" .

    $default  reduce using rule 104 (trailer)


state 197

  105 trailer: "(" testlist ")" .

    $default  reduce using rule 105 (trailer)


state 198

  107 if_stmt: if_block_left_factored "else" ":" suite .

    $default  reduce using rule 107 (if_stmt)


state 199

  110 elif_block: "elif" test ":" . suite

    NEWLINE     shift, and go to state 179
    NAME        shift, and go to state 1
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    simple_stmt  go to state 180
    small_stmt   go to state 26
    expr_stmt    go to state 27
    test         go to state 28
    raise_stmt   go to state 29
    assert_stmt  go to state 30
    return_stmt  go to state 31
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    suite        go to state 213


state 200

  108 if_stmt: if_block_left_factored elif_block "else" ":" . suite

    NEWLINE     shift, and go to state 179
    NAME        shift, and go to state 1
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    simple_stmt  go to state 180
    small_stmt   go to state 26
    expr_stmt    go to state 27
    test         go to state 28
    raise_stmt   go to state 29
    assert_stmt  go to state 30
    return_stmt  go to state 31
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    suite        go to state 214


state 201

  111 elif_block: elif_block "elif" test . ":" suite

    ":"  shift, and go to state 215


state 202

   20 annassign: ":" test "=" test .

    $default  reduce using rule 20 (annassign)


state 203

  116 suite: NEWLINE INDENT . stmts DEDENT

    NAME        shift, and go to state 1
    "class"     shift, and go to state 2
    "def"       shift, and go to state 3
    "while"     shift, and go to state 4
    "for"       shift, and go to state 5
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "if"        shift, and go to state 12
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    stmts                   go to state 216
    stmt                    go to state 24
    simple_stmt             go to state 25
    small_stmt              go to state 26
    expr_stmt               go to state 27
    test                    go to state 28
    raise_stmt              go to state 29
    assert_stmt             go to state 30
    return_stmt             go to state 31
    or_test                 go to state 32
    and_test                go to state 33
    not_test                go to state 34
    comparison              go to state 35
    expr                    go to state 36
    xor_expr                go to state 37
    ans_expr                go to state 38
    shift_expr              go to state 39
    sum                     go to state 40
    term                    go to state 41
    factor                  go to state 42
    power                   go to state 43
    primary                 go to state 44
    atom                    go to state 45
    STRING_plus             go to state 46
    if_stmt                 go to state 47
    if_block_left_factored  go to state 48
    while_stmt              go to state 49
    funcdef                 go to state 50
    classdef                go to state 51
    compound_stmt           go to state 52
    for_stmt                go to state 53


state 204

  121 classdef: "class" NAME "(" ")" ":" . suite

    NEWLINE     shift, and go to state 179
    NAME        shift, and go to state 1
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    simple_stmt  go to state 180
    small_stmt   go to state 26
    expr_stmt    go to state 27
    test         go to state 28
    raise_stmt   go to state 29
    assert_stmt  go to state 30
    return_stmt  go to state 31
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    suite        go to state 217


state 205

  114 arglist: arglist "," . test

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 212
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 206

  120 classdef: "class" NAME "(" arglist ")" . ":" suite

    ":"  shift, and go to state 218


state 207

  118 funcdef: "def" NAME "(" ")" "->" . test ":" suite

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 219
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 208

  117 funcdef: "def" NAME "(" arglist ")" . "->" test ":" suite

    "->"  shift, and go to state 220


state 209

  128 for_stmt: "for" exprlist "," "in" testlist . ":" suite

    ":"  shift, and go to state 221


state 210

  127 for_stmt: "for" exprlist "in" testlist ":" . suite

    NEWLINE     shift, and go to state 179
    NAME        shift, and go to state 1
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    simple_stmt  go to state 180
    small_stmt   go to state 26
    expr_stmt    go to state 27
    test         go to state 28
    raise_stmt   go to state 29
    assert_stmt  go to state 30
    return_stmt  go to state 31
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    suite        go to state 222


state 211

   22 test: or_test "if" or_test "else" test .

    $default  reduce using rule 22 (test)


state 212

  114 arglist: arglist "," test .

    $default  reduce using rule 114 (arglist)


state 213

  110 elif_block: "elif" test ":" suite .

    $default  reduce using rule 110 (elif_block)


state 214

  108 if_stmt: if_block_left_factored elif_block "else" ":" suite .

    $default  reduce using rule 108 (if_stmt)


state 215

  111 elif_block: elif_block "elif" test ":" . suite

    NEWLINE     shift, and go to state 179
    NAME        shift, and go to state 1
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    simple_stmt  go to state 180
    small_stmt   go to state 26
    expr_stmt    go to state 27
    test         go to state 28
    raise_stmt   go to state 29
    assert_stmt  go to state 30
    return_stmt  go to state 31
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    suite        go to state 223


state 216

    4 stmts: stmts . stmt
  116 suite: NEWLINE INDENT stmts . DEDENT

    NAME        shift, and go to state 1
    DEDENT      shift, and go to state 224
    "class"     shift, and go to state 2
    "def"       shift, and go to state 3
    "while"     shift, and go to state 4
    "for"       shift, and go to state 5
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "if"        shift, and go to state 12
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    stmt                    go to state 71
    simple_stmt             go to state 25
    small_stmt              go to state 26
    expr_stmt               go to state 27
    test                    go to state 28
    raise_stmt              go to state 29
    assert_stmt             go to state 30
    return_stmt             go to state 31
    or_test                 go to state 32
    and_test                go to state 33
    not_test                go to state 34
    comparison              go to state 35
    expr                    go to state 36
    xor_expr                go to state 37
    ans_expr                go to state 38
    shift_expr              go to state 39
    sum                     go to state 40
    term                    go to state 41
    factor                  go to state 42
    power                   go to state 43
    primary                 go to state 44
    atom                    go to state 45
    STRING_plus             go to state 46
    if_stmt                 go to state 47
    if_block_left_factored  go to state 48
    while_stmt              go to state 49
    funcdef                 go to state 50
    classdef                go to state 51
    compound_stmt           go to state 52
    for_stmt                go to state 53


state 217

  121 classdef: "class" NAME "(" ")" ":" suite .

    $default  reduce using rule 121 (classdef)


state 218

  120 classdef: "class" NAME "(" arglist ")" ":" . suite

    NEWLINE     shift, and go to state 179
    NAME        shift, and go to state 1
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    simple_stmt  go to state 180
    small_stmt   go to state 26
    expr_stmt    go to state 27
    test         go to state 28
    raise_stmt   go to state 29
    assert_stmt  go to state 30
    return_stmt  go to state 31
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    suite        go to state 225


state 219

  118 funcdef: "def" NAME "(" ")" "->" test . ":" suite

    ":"  shift, and go to state 226


state 220

  117 funcdef: "def" NAME "(" arglist ")" "->" . test ":" suite

    NAME     shift, and go to state 58
    "not"    shift, and go to state 13
    "+"      shift, and go to state 14
    "-"      shift, and go to state 15
    "~"      shift, and go to state 16
    NUMBER   shift, and go to state 17
    STRING   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    "None"   shift, and go to state 21

    test         go to state 227
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46


state 221

  128 for_stmt: "for" exprlist "," "in" testlist ":" . suite

    NEWLINE     shift, and go to state 179
    NAME        shift, and go to state 1
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    simple_stmt  go to state 180
    small_stmt   go to state 26
    expr_stmt    go to state 27
    test         go to state 28
    raise_stmt   go to state 29
    assert_stmt  go to state 30
    return_stmt  go to state 31
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    suite        go to state 228


state 222

  127 for_stmt: "for" exprlist "in" testlist ":" suite .

    $default  reduce using rule 127 (for_stmt)


state 223

  111 elif_block: elif_block "elif" test ":" suite .

    $default  reduce using rule 111 (elif_block)


state 224

  116 suite: NEWLINE INDENT stmts DEDENT .

    $default  reduce using rule 116 (suite)


state 225

  120 classdef: "class" NAME "(" arglist ")" ":" suite .

    $default  reduce using rule 120 (classdef)


state 226

  118 funcdef: "def" NAME "(" ")" "->" test ":" . suite

    NEWLINE     shift, and go to state 179
    NAME        shift, and go to state 1
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    simple_stmt  go to state 180
    small_stmt   go to state 26
    expr_stmt    go to state 27
    test         go to state 28
    raise_stmt   go to state 29
    assert_stmt  go to state 30
    return_stmt  go to state 31
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    suite        go to state 229


state 227

  117 funcdef: "def" NAME "(" arglist ")" "->" test . ":" suite

    ":"  shift, and go to state 230


state 228

  128 for_stmt: "for" exprlist "," "in" testlist ":" suite .

    $default  reduce using rule 128 (for_stmt)


state 229

  118 funcdef: "def" NAME "(" ")" "->" test ":" suite .

    $default  reduce using rule 118 (funcdef)


state 230

  117 funcdef: "def" NAME "(" arglist ")" "->" test ":" . suite

    NEWLINE     shift, and go to state 179
    NAME        shift, and go to state 1
    "break"     shift, and go to state 6
    "continue"  shift, and go to state 7
    "return"    shift, and go to state 8
    "pass"      shift, and go to state 9
    "assert"    shift, and go to state 10
    "raise"     shift, and go to state 11
    "not"       shift, and go to state 13
    "+"         shift, and go to state 14
    "-"         shift, and go to state 15
    "~"         shift, and go to state 16
    NUMBER      shift, and go to state 17
    STRING      shift, and go to state 18
    "True"      shift, and go to state 19
    "False"     shift, and go to state 20
    "None"      shift, and go to state 21

    simple_stmt  go to state 180
    small_stmt   go to state 26
    expr_stmt    go to state 27
    test         go to state 28
    raise_stmt   go to state 29
    assert_stmt  go to state 30
    return_stmt  go to state 31
    or_test      go to state 32
    and_test     go to state 33
    not_test     go to state 34
    comparison   go to state 35
    expr         go to state 36
    xor_expr     go to state 37
    ans_expr     go to state 38
    shift_expr   go to state 39
    sum          go to state 40
    term         go to state 41
    factor       go to state 42
    power        go to state 43
    primary      go to state 44
    atom         go to state 45
    STRING_plus  go to state 46
    suite        go to state 231


state 231

  117 funcdef: "def" NAME "(" arglist ")" "->" test ":" suite .

    $default  reduce using rule 117 (funcdef)
