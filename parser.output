Grammar

    0 $accept: program $end

    1 program: input
    2        | program INDENT

    3 input: start
    4      | NEWLINE input

    5 start: ε

    6 $@1: ε

    7 start: $@1 stmts

    8 stmts: stmt
    9      | stmt stmts

   10 stmt: simple_stmt
   11     | compound_stmt

   12 simple_stmt: small_stmt ";" NEWLINE
   13            | small_stmt NEWLINE
   14            | small_stmt ";" simple_stmt

   15 small_stmt: expr_stmt
   16           | return_stmt
   17           | "break"
   18           | "continue"
   19           | "pass"
   20           | global_stmt

   21 global_stmt: "global" NAME
   22            | global_stmt "," NAME

   23 expr_stmt: test ":" test
   24          | test ":" test "=" test
   25          | test augassign test
   26          | test

   27 test: or_test "if" or_test "else" test
   28     | or_test

   29 augassign: "+="
   30          | "-="
   31          | "*="
   32          | "/="
   33          | "//="
   34          | "%="
   35          | "&="
   36          | "|="
   37          | "^="
   38          | ">>="
   39          | "<<="
   40          | "**="

   41 return_stmt: "return" test
   42            | "return"

   43 or_test: and_test
   44        | or_test "or" and_test

   45 and_test: not_test
   46         | and_test "and" not_test

   47 not_test: comparison
   48         | "not" not_test

   49 comparison: expr
   50           | expr "==" comparison
   51           | expr "!=" comparison
   52           | expr "<" comparison
   53           | expr "<=" comparison
   54           | expr ">" comparison
   55           | expr ">=" comparison
   56           | expr "is" comparison
   57           | expr "in" comparison
   58           | expr "not" "in" comparison
   59           | expr "is" "not" comparison

   60 expr: xor_expr
   61     | expr "|" xor_expr

   62 xor_expr: ans_expr
   63         | xor_expr "^" ans_expr

   64 ans_expr: shift_expr
   65         | ans_expr "&" shift_expr

   66 shift_expr: sum
   67           | shift_expr "<<" sum
   68           | shift_expr ">>" sum

   69 sum: sum "+" term
   70    | sum "-" term
   71    | term

   72 term: term "*" factor
   73     | term "/" factor
   74     | term "%" factor
   75     | term "//" factor
   76     | factor

   77 factor: "+" factor
   78       | "-" factor
   79       | "~" factor
   80       | power

   81 power: primary
   82      | primary "**" factor

   83 primary: atom
   84        | primary trailer

   85 atom: NAME
   86     | NUMBER
   87     | STRING_plus
   88     | "True"
   89     | "False"
   90     | "None"
   91     | "(" testlist ")"
   92     | "[" testlist "]"
   93     | "{" testlist "}"
   94     | "(" ")"
   95     | "[" "]"

   96 STRING_plus: STRING
   97            | STRING_plus STRING

   98 trailer: "." NAME
   99        | "[" test "]"
  100        | "(" testlist ")"
  101        | "(" ")"

  102 if_stmt: "if" test ":" suite
  103        | "if" test ":" suite elif_block

  104 elif_block: "else" ":" suite
  105           | "elif" test ":" suite
  106           | "elif" test ":" suite elif_block

  107 while_stmt: "while" test ":" suite

  108 arglist: test
  109        | arglist "," test

  110 typedarglist: typedargument
  111             | test
  112             | typedarglist "," test
  113             | typedarglist "," typedargument

  114 typedarglist_comma: typedarglist
  115                   | typedarglist ","

  116 typedargument: test ":" test
  117              | test ":" test "=" test

  118 $@2: ε

  119 suite: $@2 simple_stmt

  120 $@3: ε

  121 suite: $@3 NEWLINE INDENT stmts DEDENT

  122 funcdef: "def" NAME "(" typedarglist_comma ")" "->" test ":" suite
  123        | "def" NAME "(" ")" "->" test ":" suite
  124        | "def" NAME "(" typedarglist_comma ")" ":" suite
  125        | "def" NAME "(" ")" ":" suite

  126 classdef: "class" NAME ":" suite
  127         | "class" NAME "(" typedarglist_comma ")" ":" suite
  128         | "class" NAME "(" ")" ":" suite

  129 compound_stmt: if_stmt
  130              | while_stmt
  131              | for_stmt
  132              | funcdef
  133              | classdef

  134 for_stmt: "for" exprlist "in" testlist ":" suite "else" ":" suite
  135         | "for" exprlist "in" testlist ":" suite

  136 exprlist: expr
  137         | expr ","
  138         | expr "," exprlist

  139 testlist: arglist
  140         | arglist ","


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NEWLINE <node> (258) 4 12 13 121
    NAME <node> (259) 21 22 85 98 122 123 124 125 126 127 128
    INDENT <node> (260) 2 121
    DEDENT <node> (261) 121
    "->" <node> (262) 122 123
    "class" <node> (263) 126 127 128
    "def" <node> (264) 122 123 124 125
    "while" <node> (265) 107
    "for" <node> (266) 134 135
    "break" <node> (267) 17
    "continue" <node> (268) 18
    "return" <node> (269) 41 42
    "pass" <node> (270) 19
    "global" <node> (271) 21
    "if" <node> (272) 27 102 103
    "else" <node> (273) 27 104 134
    "elif" <node> (274) 105 106
    "and" <node> (275) 46
    "or" <node> (276) 44
    "not" <node> (277) 48 58 59
    ";" <node> (278) 12 14
    "=" <node> (279) 24 117
    ":" <node> (280) 23 24 102 103 104 105 106 107 116 117 122 123 124 125 126 127 128 134 135
    "," <node> (281) 22 109 112 113 115 137 138 140
    "[" <node> (282) 92 95 99
    "]" <node> (283) 92 95 99
    "." <node> (284) 98
    "==" <node> (285) 50
    "!=" <node> (286) 51
    "<" <node> (287) 52
    "<=" <node> (288) 53
    ">" <node> (289) 54
    ">=" <node> (290) 55
    "is" <node> (291) 56 59
    "in" <node> (292) 57 58 134 135
    "|" <node> (293) 61
    "^" <node> (294) 63
    "&" <node> (295) 65
    "<<" <node> (296) 67
    ">>" <node> (297) 68
    "+" <node> (298) 69 77
    "-" <node> (299) 70 78
    "*" <node> (300) 72
    "/" <node> (301) 73
    "%" <node> (302) 74
    "//" <node> (303) 75
    "~" <node> (304) 79
    "**" <node> (305) 82
    "+=" <node> (306) 29
    "-=" <node> (307) 30
    "*=" <node> (308) 31
    "/=" <node> (309) 32
    "%=" <node> (310) 34
    "//=" <node> (311) 33
    "&=" <node> (312) 35
    "|=" <node> (313) 36
    "^=" <node> (314) 37
    "<<=" <node> (315) 39
    ">>=" <node> (316) 38
    "**=" <node> (317) 40
    "(" <node> (318) 91 94 100 101 122 123 124 125 127 128
    ")" <node> (319) 91 94 100 101 122 123 124 125 127 128
    "{" <node> (320) 93
    "}" <node> (321) 93
    NUMBER <node> (322) 86
    STRING <node> (323) 96 97
    "True" <node> (324) 88
    "False" <node> (325) 89
    "None" <node> (326) 90


Nonterminals, with rules where they appear

    $accept (72)
        on left: 0
    program (73)
        on left: 1 2
        on right: 0 2
    input (74)
        on left: 3 4
        on right: 1 4
    start <node> (75)
        on left: 5 7
        on right: 3
    $@1 (76)
        on left: 6
        on right: 7
    stmts <node> (77)
        on left: 8 9
        on right: 7 9 121
    stmt <node> (78)
        on left: 10 11
        on right: 8 9
    simple_stmt <node> (79)
        on left: 12 13 14
        on right: 10 14 119
    small_stmt <node> (80)
        on left: 15 16 17 18 19 20
        on right: 12 13 14
    global_stmt <node> (81)
        on left: 21 22
        on right: 20 22
    expr_stmt <node> (82)
        on left: 23 24 25 26
        on right: 15
    test <node> (83)
        on left: 27 28
        on right: 23 24 25 26 27 41 99 102 103 105 106 107 108 109 111 112 116 117 122 123
    augassign <node> (84)
        on left: 29 30 31 32 33 34 35 36 37 38 39 40
        on right: 25
    return_stmt <node> (85)
        on left: 41 42
        on right: 16
    or_test <node> (86)
        on left: 43 44
        on right: 27 28 44
    and_test <node> (87)
        on left: 45 46
        on right: 43 44 46
    not_test <node> (88)
        on left: 47 48
        on right: 45 46 48
    comparison <node> (89)
        on left: 49 50 51 52 53 54 55 56 57 58 59
        on right: 47 50 51 52 53 54 55 56 57 58 59
    expr <node> (90)
        on left: 60 61
        on right: 49 50 51 52 53 54 55 56 57 58 59 61 136 137 138
    xor_expr <node> (91)
        on left: 62 63
        on right: 60 61 63
    ans_expr <node> (92)
        on left: 64 65
        on right: 62 63 65
    shift_expr <node> (93)
        on left: 66 67 68
        on right: 64 65 67 68
    sum <node> (94)
        on left: 69 70 71
        on right: 66 67 68 69 70
    term <node> (95)
        on left: 72 73 74 75 76
        on right: 69 70 71 72 73 74 75
    factor <node> (96)
        on left: 77 78 79 80
        on right: 72 73 74 75 76 77 78 79 82
    power <node> (97)
        on left: 81 82
        on right: 80
    primary <node> (98)
        on left: 83 84
        on right: 81 82 84
    atom <node> (99)
        on left: 85 86 87 88 89 90 91 92 93 94 95
        on right: 83
    STRING_plus <node> (100)
        on left: 96 97
        on right: 87 97
    trailer <node> (101)
        on left: 98 99 100 101
        on right: 84
    if_stmt <node> (102)
        on left: 102 103
        on right: 129
    elif_block <node> (103)
        on left: 104 105 106
        on right: 103 106
    while_stmt <node> (104)
        on left: 107
        on right: 130
    arglist <node> (105)
        on left: 108 109
        on right: 109 139 140
    typedarglist <node> (106)
        on left: 110 111 112 113
        on right: 112 113 114 115
    typedarglist_comma <node> (107)
        on left: 114 115
        on right: 122 124 127
    typedargument <node> (108)
        on left: 116 117
        on right: 110 113
    suite <node> (109)
        on left: 119 121
        on right: 102 103 104 105 106 107 122 123 124 125 126 127 128 134 135
    $@2 (110)
        on left: 118
        on right: 119
    $@3 (111)
        on left: 120
        on right: 121
    funcdef <node> (112)
        on left: 122 123 124 125
        on right: 132
    classdef <node> (113)
        on left: 126 127 128
        on right: 133
    compound_stmt <node> (114)
        on left: 129 130 131 132 133
        on right: 11
    for_stmt <node> (115)
        on left: 134 135
        on right: 131
    exprlist <node> (116)
        on left: 136 137 138
        on right: 134 135 138
    testlist <node> (117)
        on left: 139 140
        on right: 91 92 93 100 134 135


State 0

    0 $accept: • program $end

    NEWLINE  shift, and go to state 1

    $end      reduce using rule 5 (start)
    INDENT    reduce using rule 5 (start)
    $default  reduce using rule 6 ($@1)

    program  go to state 2
    input    go to state 3
    start    go to state 4
    $@1      go to state 5


State 1

    4 input: NEWLINE • input

    NEWLINE  shift, and go to state 1

    $end      reduce using rule 5 (start)
    INDENT    reduce using rule 5 (start)
    $default  reduce using rule 6 ($@1)

    input  go to state 6
    start  go to state 4
    $@1    go to state 5


State 2

    0 $accept: program • $end
    2 program: program • INDENT

    $end    shift, and go to state 7
    INDENT  shift, and go to state 8


State 3

    1 program: input •

    $default  reduce using rule 1 (program)


State 4

    3 input: start •

    $default  reduce using rule 3 (input)


State 5

    7 start: $@1 • stmts

    NAME        shift, and go to state 9
    "class"     shift, and go to state 10
    "def"       shift, and go to state 11
    "while"     shift, and go to state 12
    "for"       shift, and go to state 13
    "break"     shift, and go to state 14
    "continue"  shift, and go to state 15
    "return"    shift, and go to state 16
    "pass"      shift, and go to state 17
    "global"    shift, and go to state 18
    "if"        shift, and go to state 19
    "not"       shift, and go to state 20
    "["         shift, and go to state 21
    "+"         shift, and go to state 22
    "-"         shift, and go to state 23
    "~"         shift, and go to state 24
    "("         shift, and go to state 25
    "{"         shift, and go to state 26
    NUMBER      shift, and go to state 27
    STRING      shift, and go to state 28
    "True"      shift, and go to state 29
    "False"     shift, and go to state 30
    "None"      shift, and go to state 31

    stmts          go to state 32
    stmt           go to state 33
    simple_stmt    go to state 34
    small_stmt     go to state 35
    global_stmt    go to state 36
    expr_stmt      go to state 37
    test           go to state 38
    return_stmt    go to state 39
    or_test        go to state 40
    and_test       go to state 41
    not_test       go to state 42
    comparison     go to state 43
    expr           go to state 44
    xor_expr       go to state 45
    ans_expr       go to state 46
    shift_expr     go to state 47
    sum            go to state 48
    term           go to state 49
    factor         go to state 50
    power          go to state 51
    primary        go to state 52
    atom           go to state 53
    STRING_plus    go to state 54
    if_stmt        go to state 55
    while_stmt     go to state 56
    funcdef        go to state 57
    classdef       go to state 58
    compound_stmt  go to state 59
    for_stmt       go to state 60


State 6

    4 input: NEWLINE input •

    $default  reduce using rule 4 (input)


State 7

    0 $accept: program $end •

    $default  accept


State 8

    2 program: program INDENT •

    $default  reduce using rule 2 (program)


State 9

   85 atom: NAME •

    $default  reduce using rule 85 (atom)


State 10

  126 classdef: "class" • NAME ":" suite
  127         | "class" • NAME "(" typedarglist_comma ")" ":" suite
  128         | "class" • NAME "(" ")" ":" suite

    NAME  shift, and go to state 61


State 11

  122 funcdef: "def" • NAME "(" typedarglist_comma ")" "->" test ":" suite
  123        | "def" • NAME "(" ")" "->" test ":" suite
  124        | "def" • NAME "(" typedarglist_comma ")" ":" suite
  125        | "def" • NAME "(" ")" ":" suite

    NAME  shift, and go to state 62


State 12

  107 while_stmt: "while" • test ":" suite

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 63
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 13

  134 for_stmt: "for" • exprlist "in" testlist ":" suite "else" ":" suite
  135         | "for" • exprlist "in" testlist ":" suite

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    expr         go to state 64
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54
    exprlist     go to state 65


State 14

   17 small_stmt: "break" •

    $default  reduce using rule 17 (small_stmt)


State 15

   18 small_stmt: "continue" •

    $default  reduce using rule 18 (small_stmt)


State 16

   41 return_stmt: "return" • test
   42            | "return" •

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    $default  reduce using rule 42 (return_stmt)

    test         go to state 66
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 17

   19 small_stmt: "pass" •

    $default  reduce using rule 19 (small_stmt)


State 18

   21 global_stmt: "global" • NAME

    NAME  shift, and go to state 67


State 19

  102 if_stmt: "if" • test ":" suite
  103        | "if" • test ":" suite elif_block

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 68
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 20

   48 not_test: "not" • not_test

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    not_test     go to state 69
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 21

   92 atom: "[" • testlist "]"
   95     | "[" • "]"

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "]"      shift, and go to state 70
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 71
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54
    arglist      go to state 72
    testlist     go to state 73


State 22

   77 factor: "+" • factor

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    factor       go to state 74
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 23

   78 factor: "-" • factor

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    factor       go to state 75
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 24

   79 factor: "~" • factor

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    factor       go to state 76
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 25

   91 atom: "(" • testlist ")"
   94     | "(" • ")"

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    ")"      shift, and go to state 77
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 71
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54
    arglist      go to state 72
    testlist     go to state 78


State 26

   93 atom: "{" • testlist "}"

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 71
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54
    arglist      go to state 72
    testlist     go to state 79


State 27

   86 atom: NUMBER •

    $default  reduce using rule 86 (atom)


State 28

   96 STRING_plus: STRING •

    $default  reduce using rule 96 (STRING_plus)


State 29

   88 atom: "True" •

    $default  reduce using rule 88 (atom)


State 30

   89 atom: "False" •

    $default  reduce using rule 89 (atom)


State 31

   90 atom: "None" •

    $default  reduce using rule 90 (atom)


State 32

    7 start: $@1 stmts •

    $default  reduce using rule 7 (start)


State 33

    8 stmts: stmt •
    9      | stmt • stmts

    NAME        shift, and go to state 9
    "class"     shift, and go to state 10
    "def"       shift, and go to state 11
    "while"     shift, and go to state 12
    "for"       shift, and go to state 13
    "break"     shift, and go to state 14
    "continue"  shift, and go to state 15
    "return"    shift, and go to state 16
    "pass"      shift, and go to state 17
    "global"    shift, and go to state 18
    "if"        shift, and go to state 19
    "not"       shift, and go to state 20
    "["         shift, and go to state 21
    "+"         shift, and go to state 22
    "-"         shift, and go to state 23
    "~"         shift, and go to state 24
    "("         shift, and go to state 25
    "{"         shift, and go to state 26
    NUMBER      shift, and go to state 27
    STRING      shift, and go to state 28
    "True"      shift, and go to state 29
    "False"     shift, and go to state 30
    "None"      shift, and go to state 31

    $default  reduce using rule 8 (stmts)

    stmts          go to state 80
    stmt           go to state 33
    simple_stmt    go to state 34
    small_stmt     go to state 35
    global_stmt    go to state 36
    expr_stmt      go to state 37
    test           go to state 38
    return_stmt    go to state 39
    or_test        go to state 40
    and_test       go to state 41
    not_test       go to state 42
    comparison     go to state 43
    expr           go to state 44
    xor_expr       go to state 45
    ans_expr       go to state 46
    shift_expr     go to state 47
    sum            go to state 48
    term           go to state 49
    factor         go to state 50
    power          go to state 51
    primary        go to state 52
    atom           go to state 53
    STRING_plus    go to state 54
    if_stmt        go to state 55
    while_stmt     go to state 56
    funcdef        go to state 57
    classdef       go to state 58
    compound_stmt  go to state 59
    for_stmt       go to state 60


State 34

   10 stmt: simple_stmt •

    $default  reduce using rule 10 (stmt)


State 35

   12 simple_stmt: small_stmt • ";" NEWLINE
   13            | small_stmt • NEWLINE
   14            | small_stmt • ";" simple_stmt

    NEWLINE  shift, and go to state 81
    ";"      shift, and go to state 82


State 36

   20 small_stmt: global_stmt •
   22 global_stmt: global_stmt • "," NAME

    ","  shift, and go to state 83

    $default  reduce using rule 20 (small_stmt)


State 37

   15 small_stmt: expr_stmt •

    $default  reduce using rule 15 (small_stmt)


State 38

   23 expr_stmt: test • ":" test
   24          | test • ":" test "=" test
   25          | test • augassign test
   26          | test •

    ":"    shift, and go to state 84
    "+="   shift, and go to state 85
    "-="   shift, and go to state 86
    "*="   shift, and go to state 87
    "/="   shift, and go to state 88
    "%="   shift, and go to state 89
    "//="  shift, and go to state 90
    "&="   shift, and go to state 91
    "|="   shift, and go to state 92
    "^="   shift, and go to state 93
    "<<="  shift, and go to state 94
    ">>="  shift, and go to state 95
    "**="  shift, and go to state 96

    $default  reduce using rule 26 (expr_stmt)

    augassign  go to state 97


State 39

   16 small_stmt: return_stmt •

    $default  reduce using rule 16 (small_stmt)


State 40

   27 test: or_test • "if" or_test "else" test
   28     | or_test •
   44 or_test: or_test • "or" and_test

    "if"  shift, and go to state 98
    "or"  shift, and go to state 99

    $default  reduce using rule 28 (test)


State 41

   43 or_test: and_test •
   46 and_test: and_test • "and" not_test

    "and"  shift, and go to state 100

    $default  reduce using rule 43 (or_test)


State 42

   45 and_test: not_test •

    $default  reduce using rule 45 (and_test)


State 43

   47 not_test: comparison •

    $default  reduce using rule 47 (not_test)


State 44

   49 comparison: expr •
   50           | expr • "==" comparison
   51           | expr • "!=" comparison
   52           | expr • "<" comparison
   53           | expr • "<=" comparison
   54           | expr • ">" comparison
   55           | expr • ">=" comparison
   56           | expr • "is" comparison
   57           | expr • "in" comparison
   58           | expr • "not" "in" comparison
   59           | expr • "is" "not" comparison
   61 expr: expr • "|" xor_expr

    "not"  shift, and go to state 101
    "=="   shift, and go to state 102
    "!="   shift, and go to state 103
    "<"    shift, and go to state 104
    "<="   shift, and go to state 105
    ">"    shift, and go to state 106
    ">="   shift, and go to state 107
    "is"   shift, and go to state 108
    "in"   shift, and go to state 109
    "|"    shift, and go to state 110

    $default  reduce using rule 49 (comparison)


State 45

   60 expr: xor_expr •
   63 xor_expr: xor_expr • "^" ans_expr

    "^"  shift, and go to state 111

    $default  reduce using rule 60 (expr)


State 46

   62 xor_expr: ans_expr •
   65 ans_expr: ans_expr • "&" shift_expr

    "&"  shift, and go to state 112

    $default  reduce using rule 62 (xor_expr)


State 47

   64 ans_expr: shift_expr •
   67 shift_expr: shift_expr • "<<" sum
   68           | shift_expr • ">>" sum

    "<<"  shift, and go to state 113
    ">>"  shift, and go to state 114

    $default  reduce using rule 64 (ans_expr)


State 48

   66 shift_expr: sum •
   69 sum: sum • "+" term
   70    | sum • "-" term

    "+"  shift, and go to state 115
    "-"  shift, and go to state 116

    $default  reduce using rule 66 (shift_expr)


State 49

   71 sum: term •
   72 term: term • "*" factor
   73     | term • "/" factor
   74     | term • "%" factor
   75     | term • "//" factor

    "*"   shift, and go to state 117
    "/"   shift, and go to state 118
    "%"   shift, and go to state 119
    "//"  shift, and go to state 120

    $default  reduce using rule 71 (sum)


State 50

   76 term: factor •

    $default  reduce using rule 76 (term)


State 51

   80 factor: power •

    $default  reduce using rule 80 (factor)


State 52

   81 power: primary •
   82      | primary • "**" factor
   84 primary: primary • trailer

    "["   shift, and go to state 121
    "."   shift, and go to state 122
    "**"  shift, and go to state 123
    "("   shift, and go to state 124

    $default  reduce using rule 81 (power)

    trailer  go to state 125


State 53

   83 primary: atom •

    $default  reduce using rule 83 (primary)


State 54

   87 atom: STRING_plus •
   97 STRING_plus: STRING_plus • STRING

    STRING  shift, and go to state 126

    $default  reduce using rule 87 (atom)


State 55

  129 compound_stmt: if_stmt •

    $default  reduce using rule 129 (compound_stmt)


State 56

  130 compound_stmt: while_stmt •

    $default  reduce using rule 130 (compound_stmt)


State 57

  132 compound_stmt: funcdef •

    $default  reduce using rule 132 (compound_stmt)


State 58

  133 compound_stmt: classdef •

    $default  reduce using rule 133 (compound_stmt)


State 59

   11 stmt: compound_stmt •

    $default  reduce using rule 11 (stmt)


State 60

  131 compound_stmt: for_stmt •

    $default  reduce using rule 131 (compound_stmt)


State 61

  126 classdef: "class" NAME • ":" suite
  127         | "class" NAME • "(" typedarglist_comma ")" ":" suite
  128         | "class" NAME • "(" ")" ":" suite

    ":"  shift, and go to state 127
    "("  shift, and go to state 128


State 62

  122 funcdef: "def" NAME • "(" typedarglist_comma ")" "->" test ":" suite
  123        | "def" NAME • "(" ")" "->" test ":" suite
  124        | "def" NAME • "(" typedarglist_comma ")" ":" suite
  125        | "def" NAME • "(" ")" ":" suite

    "("  shift, and go to state 129


State 63

  107 while_stmt: "while" test • ":" suite

    ":"  shift, and go to state 130


State 64

   61 expr: expr • "|" xor_expr
  136 exprlist: expr •
  137         | expr • ","
  138         | expr • "," exprlist

    ","  shift, and go to state 131
    "|"  shift, and go to state 110

    $default  reduce using rule 136 (exprlist)


State 65

  134 for_stmt: "for" exprlist • "in" testlist ":" suite "else" ":" suite
  135         | "for" exprlist • "in" testlist ":" suite

    "in"  shift, and go to state 132


State 66

   41 return_stmt: "return" test •

    $default  reduce using rule 41 (return_stmt)


State 67

   21 global_stmt: "global" NAME •

    $default  reduce using rule 21 (global_stmt)


State 68

  102 if_stmt: "if" test • ":" suite
  103        | "if" test • ":" suite elif_block

    ":"  shift, and go to state 133


State 69

   48 not_test: "not" not_test •

    $default  reduce using rule 48 (not_test)


State 70

   95 atom: "[" "]" •

    $default  reduce using rule 95 (atom)


State 71

  108 arglist: test •

    $default  reduce using rule 108 (arglist)


State 72

  109 arglist: arglist • "," test
  139 testlist: arglist •
  140         | arglist • ","

    ","  shift, and go to state 134

    $default  reduce using rule 139 (testlist)


State 73

   92 atom: "[" testlist • "]"

    "]"  shift, and go to state 135


State 74

   77 factor: "+" factor •

    $default  reduce using rule 77 (factor)


State 75

   78 factor: "-" factor •

    $default  reduce using rule 78 (factor)


State 76

   79 factor: "~" factor •

    $default  reduce using rule 79 (factor)


State 77

   94 atom: "(" ")" •

    $default  reduce using rule 94 (atom)


State 78

   91 atom: "(" testlist • ")"

    ")"  shift, and go to state 136


State 79

   93 atom: "{" testlist • "}"

    "}"  shift, and go to state 137


State 80

    9 stmts: stmt stmts •

    $default  reduce using rule 9 (stmts)


State 81

   13 simple_stmt: small_stmt NEWLINE •

    $default  reduce using rule 13 (simple_stmt)


State 82

   12 simple_stmt: small_stmt ";" • NEWLINE
   14            | small_stmt ";" • simple_stmt

    NEWLINE     shift, and go to state 138
    NAME        shift, and go to state 9
    "break"     shift, and go to state 14
    "continue"  shift, and go to state 15
    "return"    shift, and go to state 16
    "pass"      shift, and go to state 17
    "global"    shift, and go to state 18
    "not"       shift, and go to state 20
    "["         shift, and go to state 21
    "+"         shift, and go to state 22
    "-"         shift, and go to state 23
    "~"         shift, and go to state 24
    "("         shift, and go to state 25
    "{"         shift, and go to state 26
    NUMBER      shift, and go to state 27
    STRING      shift, and go to state 28
    "True"      shift, and go to state 29
    "False"     shift, and go to state 30
    "None"      shift, and go to state 31

    simple_stmt  go to state 139
    small_stmt   go to state 35
    global_stmt  go to state 36
    expr_stmt    go to state 37
    test         go to state 38
    return_stmt  go to state 39
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 83

   22 global_stmt: global_stmt "," • NAME

    NAME  shift, and go to state 140


State 84

   23 expr_stmt: test ":" • test
   24          | test ":" • test "=" test

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 141
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 85

   29 augassign: "+=" •

    $default  reduce using rule 29 (augassign)


State 86

   30 augassign: "-=" •

    $default  reduce using rule 30 (augassign)


State 87

   31 augassign: "*=" •

    $default  reduce using rule 31 (augassign)


State 88

   32 augassign: "/=" •

    $default  reduce using rule 32 (augassign)


State 89

   34 augassign: "%=" •

    $default  reduce using rule 34 (augassign)


State 90

   33 augassign: "//=" •

    $default  reduce using rule 33 (augassign)


State 91

   35 augassign: "&=" •

    $default  reduce using rule 35 (augassign)


State 92

   36 augassign: "|=" •

    $default  reduce using rule 36 (augassign)


State 93

   37 augassign: "^=" •

    $default  reduce using rule 37 (augassign)


State 94

   39 augassign: "<<=" •

    $default  reduce using rule 39 (augassign)


State 95

   38 augassign: ">>=" •

    $default  reduce using rule 38 (augassign)


State 96

   40 augassign: "**=" •

    $default  reduce using rule 40 (augassign)


State 97

   25 expr_stmt: test augassign • test

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 142
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 98

   27 test: or_test "if" • or_test "else" test

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    or_test      go to state 143
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 99

   44 or_test: or_test "or" • and_test

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    and_test     go to state 144
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 100

   46 and_test: and_test "and" • not_test

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    not_test     go to state 145
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 101

   58 comparison: expr "not" • "in" comparison

    "in"  shift, and go to state 146


State 102

   50 comparison: expr "==" • comparison

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    comparison   go to state 147
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 103

   51 comparison: expr "!=" • comparison

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    comparison   go to state 148
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 104

   52 comparison: expr "<" • comparison

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    comparison   go to state 149
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 105

   53 comparison: expr "<=" • comparison

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    comparison   go to state 150
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 106

   54 comparison: expr ">" • comparison

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    comparison   go to state 151
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 107

   55 comparison: expr ">=" • comparison

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    comparison   go to state 152
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 108

   56 comparison: expr "is" • comparison
   59           | expr "is" • "not" comparison

    NAME     shift, and go to state 9
    "not"    shift, and go to state 153
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    comparison   go to state 154
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 109

   57 comparison: expr "in" • comparison

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    comparison   go to state 155
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 110

   61 expr: expr "|" • xor_expr

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    xor_expr     go to state 156
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 111

   63 xor_expr: xor_expr "^" • ans_expr

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    ans_expr     go to state 157
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 112

   65 ans_expr: ans_expr "&" • shift_expr

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    shift_expr   go to state 158
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 113

   67 shift_expr: shift_expr "<<" • sum

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    sum          go to state 159
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 114

   68 shift_expr: shift_expr ">>" • sum

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    sum          go to state 160
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 115

   69 sum: sum "+" • term

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    term         go to state 161
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 116

   70 sum: sum "-" • term

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    term         go to state 162
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 117

   72 term: term "*" • factor

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    factor       go to state 163
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 118

   73 term: term "/" • factor

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    factor       go to state 164
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 119

   74 term: term "%" • factor

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    factor       go to state 165
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 120

   75 term: term "//" • factor

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    factor       go to state 166
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 121

   99 trailer: "[" • test "]"

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 167
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 122

   98 trailer: "." • NAME

    NAME  shift, and go to state 168


State 123

   82 power: primary "**" • factor

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    factor       go to state 169
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 124

  100 trailer: "(" • testlist ")"
  101        | "(" • ")"

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    ")"      shift, and go to state 170
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 71
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54
    arglist      go to state 72
    testlist     go to state 171


State 125

   84 primary: primary trailer •

    $default  reduce using rule 84 (primary)


State 126

   97 STRING_plus: STRING_plus STRING •

    $default  reduce using rule 97 (STRING_plus)


State 127

  126 classdef: "class" NAME ":" • suite

    NEWLINE   reduce using rule 120 ($@3)
    $default  reduce using rule 118 ($@2)

    suite  go to state 172
    $@2    go to state 173
    $@3    go to state 174


State 128

  127 classdef: "class" NAME "(" • typedarglist_comma ")" ":" suite
  128         | "class" NAME "(" • ")" ":" suite

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    ")"      shift, and go to state 175
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test                go to state 176
    or_test             go to state 40
    and_test            go to state 41
    not_test            go to state 42
    comparison          go to state 43
    expr                go to state 44
    xor_expr            go to state 45
    ans_expr            go to state 46
    shift_expr          go to state 47
    sum                 go to state 48
    term                go to state 49
    factor              go to state 50
    power               go to state 51
    primary             go to state 52
    atom                go to state 53
    STRING_plus         go to state 54
    typedarglist        go to state 177
    typedarglist_comma  go to state 178
    typedargument       go to state 179


State 129

  122 funcdef: "def" NAME "(" • typedarglist_comma ")" "->" test ":" suite
  123        | "def" NAME "(" • ")" "->" test ":" suite
  124        | "def" NAME "(" • typedarglist_comma ")" ":" suite
  125        | "def" NAME "(" • ")" ":" suite

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    ")"      shift, and go to state 180
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test                go to state 176
    or_test             go to state 40
    and_test            go to state 41
    not_test            go to state 42
    comparison          go to state 43
    expr                go to state 44
    xor_expr            go to state 45
    ans_expr            go to state 46
    shift_expr          go to state 47
    sum                 go to state 48
    term                go to state 49
    factor              go to state 50
    power               go to state 51
    primary             go to state 52
    atom                go to state 53
    STRING_plus         go to state 54
    typedarglist        go to state 177
    typedarglist_comma  go to state 181
    typedargument       go to state 179


State 130

  107 while_stmt: "while" test ":" • suite

    NEWLINE   reduce using rule 120 ($@3)
    $default  reduce using rule 118 ($@2)

    suite  go to state 182
    $@2    go to state 173
    $@3    go to state 174


State 131

  137 exprlist: expr "," •
  138         | expr "," • exprlist

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    $default  reduce using rule 137 (exprlist)

    expr         go to state 64
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54
    exprlist     go to state 183


State 132

  134 for_stmt: "for" exprlist "in" • testlist ":" suite "else" ":" suite
  135         | "for" exprlist "in" • testlist ":" suite

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 71
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54
    arglist      go to state 72
    testlist     go to state 184


State 133

  102 if_stmt: "if" test ":" • suite
  103        | "if" test ":" • suite elif_block

    NEWLINE   reduce using rule 120 ($@3)
    $default  reduce using rule 118 ($@2)

    suite  go to state 185
    $@2    go to state 173
    $@3    go to state 174


State 134

  109 arglist: arglist "," • test
  140 testlist: arglist "," •

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    $default  reduce using rule 140 (testlist)

    test         go to state 186
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 135

   92 atom: "[" testlist "]" •

    $default  reduce using rule 92 (atom)


State 136

   91 atom: "(" testlist ")" •

    $default  reduce using rule 91 (atom)


State 137

   93 atom: "{" testlist "}" •

    $default  reduce using rule 93 (atom)


State 138

   12 simple_stmt: small_stmt ";" NEWLINE •

    $default  reduce using rule 12 (simple_stmt)


State 139

   14 simple_stmt: small_stmt ";" simple_stmt •

    $default  reduce using rule 14 (simple_stmt)


State 140

   22 global_stmt: global_stmt "," NAME •

    $default  reduce using rule 22 (global_stmt)


State 141

   23 expr_stmt: test ":" test •
   24          | test ":" test • "=" test

    "="  shift, and go to state 187

    $default  reduce using rule 23 (expr_stmt)


State 142

   25 expr_stmt: test augassign test •

    $default  reduce using rule 25 (expr_stmt)


State 143

   27 test: or_test "if" or_test • "else" test
   44 or_test: or_test • "or" and_test

    "else"  shift, and go to state 188
    "or"    shift, and go to state 99


State 144

   44 or_test: or_test "or" and_test •
   46 and_test: and_test • "and" not_test

    "and"  shift, and go to state 100

    $default  reduce using rule 44 (or_test)


State 145

   46 and_test: and_test "and" not_test •

    $default  reduce using rule 46 (and_test)


State 146

   58 comparison: expr "not" "in" • comparison

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    comparison   go to state 189
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 147

   50 comparison: expr "==" comparison •

    $default  reduce using rule 50 (comparison)


State 148

   51 comparison: expr "!=" comparison •

    $default  reduce using rule 51 (comparison)


State 149

   52 comparison: expr "<" comparison •

    $default  reduce using rule 52 (comparison)


State 150

   53 comparison: expr "<=" comparison •

    $default  reduce using rule 53 (comparison)


State 151

   54 comparison: expr ">" comparison •

    $default  reduce using rule 54 (comparison)


State 152

   55 comparison: expr ">=" comparison •

    $default  reduce using rule 55 (comparison)


State 153

   59 comparison: expr "is" "not" • comparison

    NAME     shift, and go to state 9
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    comparison   go to state 190
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 154

   56 comparison: expr "is" comparison •

    $default  reduce using rule 56 (comparison)


State 155

   57 comparison: expr "in" comparison •

    $default  reduce using rule 57 (comparison)


State 156

   61 expr: expr "|" xor_expr •
   63 xor_expr: xor_expr • "^" ans_expr

    "^"  shift, and go to state 111

    $default  reduce using rule 61 (expr)


State 157

   63 xor_expr: xor_expr "^" ans_expr •
   65 ans_expr: ans_expr • "&" shift_expr

    "&"  shift, and go to state 112

    $default  reduce using rule 63 (xor_expr)


State 158

   65 ans_expr: ans_expr "&" shift_expr •
   67 shift_expr: shift_expr • "<<" sum
   68           | shift_expr • ">>" sum

    "<<"  shift, and go to state 113
    ">>"  shift, and go to state 114

    $default  reduce using rule 65 (ans_expr)


State 159

   67 shift_expr: shift_expr "<<" sum •
   69 sum: sum • "+" term
   70    | sum • "-" term

    "+"  shift, and go to state 115
    "-"  shift, and go to state 116

    $default  reduce using rule 67 (shift_expr)


State 160

   68 shift_expr: shift_expr ">>" sum •
   69 sum: sum • "+" term
   70    | sum • "-" term

    "+"  shift, and go to state 115
    "-"  shift, and go to state 116

    $default  reduce using rule 68 (shift_expr)


State 161

   69 sum: sum "+" term •
   72 term: term • "*" factor
   73     | term • "/" factor
   74     | term • "%" factor
   75     | term • "//" factor

    "*"   shift, and go to state 117
    "/"   shift, and go to state 118
    "%"   shift, and go to state 119
    "//"  shift, and go to state 120

    $default  reduce using rule 69 (sum)


State 162

   70 sum: sum "-" term •
   72 term: term • "*" factor
   73     | term • "/" factor
   74     | term • "%" factor
   75     | term • "//" factor

    "*"   shift, and go to state 117
    "/"   shift, and go to state 118
    "%"   shift, and go to state 119
    "//"  shift, and go to state 120

    $default  reduce using rule 70 (sum)


State 163

   72 term: term "*" factor •

    $default  reduce using rule 72 (term)


State 164

   73 term: term "/" factor •

    $default  reduce using rule 73 (term)


State 165

   74 term: term "%" factor •

    $default  reduce using rule 74 (term)


State 166

   75 term: term "//" factor •

    $default  reduce using rule 75 (term)


State 167

   99 trailer: "[" test • "]"

    "]"  shift, and go to state 191


State 168

   98 trailer: "." NAME •

    $default  reduce using rule 98 (trailer)


State 169

   82 power: primary "**" factor •

    $default  reduce using rule 82 (power)


State 170

  101 trailer: "(" ")" •

    $default  reduce using rule 101 (trailer)


State 171

  100 trailer: "(" testlist • ")"

    ")"  shift, and go to state 192


State 172

  126 classdef: "class" NAME ":" suite •

    $default  reduce using rule 126 (classdef)


State 173

  119 suite: $@2 • simple_stmt

    NAME        shift, and go to state 9
    "break"     shift, and go to state 14
    "continue"  shift, and go to state 15
    "return"    shift, and go to state 16
    "pass"      shift, and go to state 17
    "global"    shift, and go to state 18
    "not"       shift, and go to state 20
    "["         shift, and go to state 21
    "+"         shift, and go to state 22
    "-"         shift, and go to state 23
    "~"         shift, and go to state 24
    "("         shift, and go to state 25
    "{"         shift, and go to state 26
    NUMBER      shift, and go to state 27
    STRING      shift, and go to state 28
    "True"      shift, and go to state 29
    "False"     shift, and go to state 30
    "None"      shift, and go to state 31

    simple_stmt  go to state 193
    small_stmt   go to state 35
    global_stmt  go to state 36
    expr_stmt    go to state 37
    test         go to state 38
    return_stmt  go to state 39
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 174

  121 suite: $@3 • NEWLINE INDENT stmts DEDENT

    NEWLINE  shift, and go to state 194


State 175

  128 classdef: "class" NAME "(" ")" • ":" suite

    ":"  shift, and go to state 195


State 176

  111 typedarglist: test •
  116 typedargument: test • ":" test
  117              | test • ":" test "=" test

    ":"  shift, and go to state 196

    $default  reduce using rule 111 (typedarglist)


State 177

  112 typedarglist: typedarglist • "," test
  113             | typedarglist • "," typedargument
  114 typedarglist_comma: typedarglist •
  115                   | typedarglist • ","

    ","  shift, and go to state 197

    $default  reduce using rule 114 (typedarglist_comma)


State 178

  127 classdef: "class" NAME "(" typedarglist_comma • ")" ":" suite

    ")"  shift, and go to state 198


State 179

  110 typedarglist: typedargument •

    $default  reduce using rule 110 (typedarglist)


State 180

  123 funcdef: "def" NAME "(" ")" • "->" test ":" suite
  125        | "def" NAME "(" ")" • ":" suite

    "->"  shift, and go to state 199
    ":"   shift, and go to state 200


State 181

  122 funcdef: "def" NAME "(" typedarglist_comma • ")" "->" test ":" suite
  124        | "def" NAME "(" typedarglist_comma • ")" ":" suite

    ")"  shift, and go to state 201


State 182

  107 while_stmt: "while" test ":" suite •

    $default  reduce using rule 107 (while_stmt)


State 183

  138 exprlist: expr "," exprlist •

    $default  reduce using rule 138 (exprlist)


State 184

  134 for_stmt: "for" exprlist "in" testlist • ":" suite "else" ":" suite
  135         | "for" exprlist "in" testlist • ":" suite

    ":"  shift, and go to state 202


State 185

  102 if_stmt: "if" test ":" suite •
  103        | "if" test ":" suite • elif_block

    "else"  shift, and go to state 203
    "elif"  shift, and go to state 204

    $default  reduce using rule 102 (if_stmt)

    elif_block  go to state 205


State 186

  109 arglist: arglist "," test •

    $default  reduce using rule 109 (arglist)


State 187

   24 expr_stmt: test ":" test "=" • test

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 206
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 188

   27 test: or_test "if" or_test "else" • test

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 207
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 189

   58 comparison: expr "not" "in" comparison •

    $default  reduce using rule 58 (comparison)


State 190

   59 comparison: expr "is" "not" comparison •

    $default  reduce using rule 59 (comparison)


State 191

   99 trailer: "[" test "]" •

    $default  reduce using rule 99 (trailer)


State 192

  100 trailer: "(" testlist ")" •

    $default  reduce using rule 100 (trailer)


State 193

  119 suite: $@2 simple_stmt •

    $default  reduce using rule 119 (suite)


State 194

  121 suite: $@3 NEWLINE • INDENT stmts DEDENT

    INDENT  shift, and go to state 208


State 195

  128 classdef: "class" NAME "(" ")" ":" • suite

    NEWLINE   reduce using rule 120 ($@3)
    $default  reduce using rule 118 ($@2)

    suite  go to state 209
    $@2    go to state 173
    $@3    go to state 174


State 196

  116 typedargument: test ":" • test
  117              | test ":" • test "=" test

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 210
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 197

  112 typedarglist: typedarglist "," • test
  113             | typedarglist "," • typedargument
  115 typedarglist_comma: typedarglist "," •

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    $default  reduce using rule 115 (typedarglist_comma)

    test           go to state 211
    or_test        go to state 40
    and_test       go to state 41
    not_test       go to state 42
    comparison     go to state 43
    expr           go to state 44
    xor_expr       go to state 45
    ans_expr       go to state 46
    shift_expr     go to state 47
    sum            go to state 48
    term           go to state 49
    factor         go to state 50
    power          go to state 51
    primary        go to state 52
    atom           go to state 53
    STRING_plus    go to state 54
    typedargument  go to state 212


State 198

  127 classdef: "class" NAME "(" typedarglist_comma ")" • ":" suite

    ":"  shift, and go to state 213


State 199

  123 funcdef: "def" NAME "(" ")" "->" • test ":" suite

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 214
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 200

  125 funcdef: "def" NAME "(" ")" ":" • suite

    NEWLINE   reduce using rule 120 ($@3)
    $default  reduce using rule 118 ($@2)

    suite  go to state 215
    $@2    go to state 173
    $@3    go to state 174


State 201

  122 funcdef: "def" NAME "(" typedarglist_comma ")" • "->" test ":" suite
  124        | "def" NAME "(" typedarglist_comma ")" • ":" suite

    "->"  shift, and go to state 216
    ":"   shift, and go to state 217


State 202

  134 for_stmt: "for" exprlist "in" testlist ":" • suite "else" ":" suite
  135         | "for" exprlist "in" testlist ":" • suite

    NEWLINE   reduce using rule 120 ($@3)
    $default  reduce using rule 118 ($@2)

    suite  go to state 218
    $@2    go to state 173
    $@3    go to state 174


State 203

  104 elif_block: "else" • ":" suite

    ":"  shift, and go to state 219


State 204

  105 elif_block: "elif" • test ":" suite
  106           | "elif" • test ":" suite elif_block

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 220
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 205

  103 if_stmt: "if" test ":" suite elif_block •

    $default  reduce using rule 103 (if_stmt)


State 206

   24 expr_stmt: test ":" test "=" test •

    $default  reduce using rule 24 (expr_stmt)


State 207

   27 test: or_test "if" or_test "else" test •

    $default  reduce using rule 27 (test)


State 208

  121 suite: $@3 NEWLINE INDENT • stmts DEDENT

    NAME        shift, and go to state 9
    "class"     shift, and go to state 10
    "def"       shift, and go to state 11
    "while"     shift, and go to state 12
    "for"       shift, and go to state 13
    "break"     shift, and go to state 14
    "continue"  shift, and go to state 15
    "return"    shift, and go to state 16
    "pass"      shift, and go to state 17
    "global"    shift, and go to state 18
    "if"        shift, and go to state 19
    "not"       shift, and go to state 20
    "["         shift, and go to state 21
    "+"         shift, and go to state 22
    "-"         shift, and go to state 23
    "~"         shift, and go to state 24
    "("         shift, and go to state 25
    "{"         shift, and go to state 26
    NUMBER      shift, and go to state 27
    STRING      shift, and go to state 28
    "True"      shift, and go to state 29
    "False"     shift, and go to state 30
    "None"      shift, and go to state 31

    stmts          go to state 221
    stmt           go to state 33
    simple_stmt    go to state 34
    small_stmt     go to state 35
    global_stmt    go to state 36
    expr_stmt      go to state 37
    test           go to state 38
    return_stmt    go to state 39
    or_test        go to state 40
    and_test       go to state 41
    not_test       go to state 42
    comparison     go to state 43
    expr           go to state 44
    xor_expr       go to state 45
    ans_expr       go to state 46
    shift_expr     go to state 47
    sum            go to state 48
    term           go to state 49
    factor         go to state 50
    power          go to state 51
    primary        go to state 52
    atom           go to state 53
    STRING_plus    go to state 54
    if_stmt        go to state 55
    while_stmt     go to state 56
    funcdef        go to state 57
    classdef       go to state 58
    compound_stmt  go to state 59
    for_stmt       go to state 60


State 209

  128 classdef: "class" NAME "(" ")" ":" suite •

    $default  reduce using rule 128 (classdef)


State 210

  116 typedargument: test ":" test •
  117              | test ":" test • "=" test

    "="  shift, and go to state 222

    $default  reduce using rule 116 (typedargument)


State 211

  112 typedarglist: typedarglist "," test •
  116 typedargument: test • ":" test
  117              | test • ":" test "=" test

    ":"  shift, and go to state 196

    $default  reduce using rule 112 (typedarglist)


State 212

  113 typedarglist: typedarglist "," typedargument •

    $default  reduce using rule 113 (typedarglist)


State 213

  127 classdef: "class" NAME "(" typedarglist_comma ")" ":" • suite

    NEWLINE   reduce using rule 120 ($@3)
    $default  reduce using rule 118 ($@2)

    suite  go to state 223
    $@2    go to state 173
    $@3    go to state 174


State 214

  123 funcdef: "def" NAME "(" ")" "->" test • ":" suite

    ":"  shift, and go to state 224


State 215

  125 funcdef: "def" NAME "(" ")" ":" suite •

    $default  reduce using rule 125 (funcdef)


State 216

  122 funcdef: "def" NAME "(" typedarglist_comma ")" "->" • test ":" suite

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 225
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 217

  124 funcdef: "def" NAME "(" typedarglist_comma ")" ":" • suite

    NEWLINE   reduce using rule 120 ($@3)
    $default  reduce using rule 118 ($@2)

    suite  go to state 226
    $@2    go to state 173
    $@3    go to state 174


State 218

  134 for_stmt: "for" exprlist "in" testlist ":" suite • "else" ":" suite
  135         | "for" exprlist "in" testlist ":" suite •

    "else"  shift, and go to state 227

    $default  reduce using rule 135 (for_stmt)


State 219

  104 elif_block: "else" ":" • suite

    NEWLINE   reduce using rule 120 ($@3)
    $default  reduce using rule 118 ($@2)

    suite  go to state 228
    $@2    go to state 173
    $@3    go to state 174


State 220

  105 elif_block: "elif" test • ":" suite
  106           | "elif" test • ":" suite elif_block

    ":"  shift, and go to state 229


State 221

  121 suite: $@3 NEWLINE INDENT stmts • DEDENT

    DEDENT  shift, and go to state 230


State 222

  117 typedargument: test ":" test "=" • test

    NAME     shift, and go to state 9
    "not"    shift, and go to state 20
    "["      shift, and go to state 21
    "+"      shift, and go to state 22
    "-"      shift, and go to state 23
    "~"      shift, and go to state 24
    "("      shift, and go to state 25
    "{"      shift, and go to state 26
    NUMBER   shift, and go to state 27
    STRING   shift, and go to state 28
    "True"   shift, and go to state 29
    "False"  shift, and go to state 30
    "None"   shift, and go to state 31

    test         go to state 231
    or_test      go to state 40
    and_test     go to state 41
    not_test     go to state 42
    comparison   go to state 43
    expr         go to state 44
    xor_expr     go to state 45
    ans_expr     go to state 46
    shift_expr   go to state 47
    sum          go to state 48
    term         go to state 49
    factor       go to state 50
    power        go to state 51
    primary      go to state 52
    atom         go to state 53
    STRING_plus  go to state 54


State 223

  127 classdef: "class" NAME "(" typedarglist_comma ")" ":" suite •

    $default  reduce using rule 127 (classdef)


State 224

  123 funcdef: "def" NAME "(" ")" "->" test ":" • suite

    NEWLINE   reduce using rule 120 ($@3)
    $default  reduce using rule 118 ($@2)

    suite  go to state 232
    $@2    go to state 173
    $@3    go to state 174


State 225

  122 funcdef: "def" NAME "(" typedarglist_comma ")" "->" test • ":" suite

    ":"  shift, and go to state 233


State 226

  124 funcdef: "def" NAME "(" typedarglist_comma ")" ":" suite •

    $default  reduce using rule 124 (funcdef)


State 227

  134 for_stmt: "for" exprlist "in" testlist ":" suite "else" • ":" suite

    ":"  shift, and go to state 234


State 228

  104 elif_block: "else" ":" suite •

    $default  reduce using rule 104 (elif_block)


State 229

  105 elif_block: "elif" test ":" • suite
  106           | "elif" test ":" • suite elif_block

    NEWLINE   reduce using rule 120 ($@3)
    $default  reduce using rule 118 ($@2)

    suite  go to state 235
    $@2    go to state 173
    $@3    go to state 174


State 230

  121 suite: $@3 NEWLINE INDENT stmts DEDENT •

    $default  reduce using rule 121 (suite)


State 231

  117 typedargument: test ":" test "=" test •

    $default  reduce using rule 117 (typedargument)


State 232

  123 funcdef: "def" NAME "(" ")" "->" test ":" suite •

    $default  reduce using rule 123 (funcdef)


State 233

  122 funcdef: "def" NAME "(" typedarglist_comma ")" "->" test ":" • suite

    NEWLINE   reduce using rule 120 ($@3)
    $default  reduce using rule 118 ($@2)

    suite  go to state 236
    $@2    go to state 173
    $@3    go to state 174


State 234

  134 for_stmt: "for" exprlist "in" testlist ":" suite "else" ":" • suite

    NEWLINE   reduce using rule 120 ($@3)
    $default  reduce using rule 118 ($@2)

    suite  go to state 237
    $@2    go to state 173
    $@3    go to state 174


State 235

  105 elif_block: "elif" test ":" suite •
  106           | "elif" test ":" suite • elif_block

    "else"  shift, and go to state 203
    "elif"  shift, and go to state 204

    $default  reduce using rule 105 (elif_block)

    elif_block  go to state 238


State 236

  122 funcdef: "def" NAME "(" typedarglist_comma ")" "->" test ":" suite •

    $default  reduce using rule 122 (funcdef)


State 237

  134 for_stmt: "for" exprlist "in" testlist ":" suite "else" ":" suite •

    $default  reduce using rule 134 (for_stmt)


State 238

  106 elif_block: "elif" test ":" suite elif_block •

    $default  reduce using rule 106 (elif_block)
